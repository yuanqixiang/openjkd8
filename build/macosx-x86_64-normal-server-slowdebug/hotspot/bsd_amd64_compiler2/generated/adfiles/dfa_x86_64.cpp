//
// Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License version 2 only, as
// published by the Free Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// You should have received a copy of the GNU General Public License version
// 2 along with this work; if not, write to the Free Software Foundation,
// Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
//
// Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
// or visit www.oracle.com if you need additional information or have any
// questions.
//
//

// Machine Generated File.  Do Not Edit!

#include "precompiled.hpp"
#include "adfiles/ad_x86_64.hpp"
#include "opto/cfgnode.hpp"
#include "opto/matcher.hpp"
#include "opto/opcodes.hpp"

//------------------------- Source -----------------------------------------

//------------------------- Attributes -------------------------------------

// AttributeForm 
static const int op_cost = 0;

// AttributeForm 
static const int ins_cost = 100;

// AttributeForm 
static const int ins_size = 8;

// AttributeForm 
static const int ins_short_branch = 0;

// AttributeForm 
static const int ins_alignment = 1;

//------------------------- Macros -----------------------------------------
#define DFA_PRODUCTION(result, rule, cost)\
  _cost[ (result) ] = cost; _rule[ (result) ] = rule;

#define DFA_PRODUCTION__SET_VALID(result, rule, cost)\
  DFA_PRODUCTION( (result), (rule), (cost) ); STATE__SET_VALID( (result) );

//------------------------- DFA --------------------------------------------
// DFA is a large switch with case statements for each ideal opcode encountered
// in any match rule in the ad file.  Each case has a series of if's to handle
// the match or fail decisions.  The matches test the cost function of that
// rule, and prune any cases which are higher cost for the same reduction.
// In order to generate the DFA we walk the table of ideal opcode/MatchList
// pairs generated by the ADLC front end to build the contents of the case
// statements (a series of if statements).


void  State::_sub_Op_RegN(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(RAX_REGN, rax_RegN_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(RREGN, rRegN_rule, c)
    }
}
void  State::_sub_Op_RegI(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, no_rax_rdx_RegI_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, no_rcx_RegI_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(RDI_REGI, rdi_RegI_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGI, rRegI_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, rax_RegI_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, rbx_RegI_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, rcx_RegI_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, rdx_RegI_rule, c)
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
}
void  State::_sub_Op_RegP(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(R15_REGP, r15_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, any_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGP, rRegP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, rax_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, rbx_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, no_rax_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, no_rbp_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, rsi_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, no_rax_rbx_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, rdi_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, rbp_RegP_rule, c)
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
}
void  State::_sub_Op_RegF(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(REGF, regF_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
}
void  State::_sub_Op_RegD(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(REGD, regD_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
}
void  State::_sub_Op_RegL(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(RDX_REGL, rdx_RegL_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGL, rRegL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, no_rax_rdx_RegL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, no_rax_RegL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, no_rcx_RegL_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, rax_RegL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, rcx_RegL_rule, c)
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
    {
      unsigned int c = 0;
    }
}
void  State::_sub_Op_RegFlags(const Node *n){
    if(         
#line 3457 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
false
#line 213 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(RFLAGSREGUCF, rFlagsRegUCF_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, rFlagsRegU_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, rFlagsReg_rule, c)
    }
}
void  State::_sub_Op_VecS(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(VECS, vecS_rule, c)
    }
}
void  State::_sub_Op_VecD(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(VECD, vecD_rule, c)
    }
}
void  State::_sub_Op_VecX(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(VECX, vecX_rule, c)
    }
}
void  State::_sub_Op_VecY(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(VECY, vecY_rule, c)
    }
}
void  State::_sub_Op_AbsD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 1606 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 256 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+150;
        DFA_PRODUCTION__SET_VALID(REGD, absD_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 1594 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 266 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, absD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_AbsF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 1581 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 282 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+150;
        DFA_PRODUCTION__SET_VALID(REGF, absF_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 1570 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 292 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, absF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_AddD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 1132 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 308 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+150;
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1120 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 318 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 1120 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 332 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1108 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 346 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 1097 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 360 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1085 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 374 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 1085 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 388 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1073 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 402 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_AddF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 1061 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 418 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+150;
        DFA_PRODUCTION__SET_VALID(REGF, addF_reg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1049 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 428 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 1049 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 442 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1037 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 456 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 1026 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 470 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1014 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 484 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 1014 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 498 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1002 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 512 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_AddI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _SUBI_RREGI_RREGI) && STATE__VALID_CHILD(_kids[1], _ANDI_RREGI__CMPLTMASK_RREGI_RREGI) &&
        /*p*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) && /*q*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_SUBI_RREGI_RREGI]+_kids[1]->_cost[_ANDI_RREGI__CMPLTMASK_RREGI_RREGI]+300;
        DFA_PRODUCTION__SET_VALID(RREGI, cadd_cmpLTMask_2_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cadd_cmpLTMask_2_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cadd_cmpLTMask_2_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cadd_cmpLTMask_2_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cadd_cmpLTMask_2_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cadd_cmpLTMask_2_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cadd_cmpLTMask_2_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cadd_cmpLTMask_2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_RREGI__CMPLTMASK_RREGI_RREGI) && STATE__VALID_CHILD(_kids[1], _SUBI_RREGI_RREGI) &&
        /*p*/(_kids[0]->_kids[1]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*q*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_RREGI__CMPLTMASK_RREGI_RREGI]+_kids[1]->_cost[_SUBI_RREGI_RREGI]+300;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cadd_cmpLTMask_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cadd_cmpLTMask_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cadd_cmpLTMask_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cadd_cmpLTMask_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cadd_cmpLTMask_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cadd_cmpLTMask_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cadd_cmpLTMask_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cadd_cmpLTMask_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBI_RREGI_RREGI) && STATE__VALID_CHILD(_kids[1], _ANDI__CMPLTMASK_RREGI_RREGI_RREGI) &&
        /*p*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) && /*q*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[0]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_SUBI_RREGI_RREGI]+_kids[1]->_cost[_ANDI__CMPLTMASK_RREGI_RREGI_RREGI]+300;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cadd_cmpLTMask_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cadd_cmpLTMask_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cadd_cmpLTMask_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cadd_cmpLTMask_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cadd_cmpLTMask_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cadd_cmpLTMask_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cadd_cmpLTMask_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cadd_cmpLTMask_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__CMPLTMASK_RREGI_RREGI_RREGI) && STATE__VALID_CHILD(_kids[1], _SUBI_RREGI_RREGI) &&
        /*p*/(_kids[0]->_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*q*/(_kids[0]->_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__CMPLTMASK_RREGI_RREGI_RREGI]+_kids[1]->_cost[_SUBI_RREGI_RREGI]+300;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cadd_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cadd_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cadd_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cadd_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cadd_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cadd_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cadd_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cadd_cmpLTMask_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_ADDI_RREGI_IMMI_M1, _AddI_rRegI_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_ADDI__LOADI_MEMORY__IMMI_M1, _AddI__LoadI_memory__immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) &&
        (
#line 6786 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseIncDec
#line 642 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, decI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, decI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, decI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, decI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, decI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, decI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, decI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, decI_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_ADDI__LOADI_MEMORY__IMMI1, _AddI__LoadI_memory__immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) &&
        (
#line 6760 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseIncDec
#line 681 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, incI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, incI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, incI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, incI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, incI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, incI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, incI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, incI_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_ADDI__LOADI_MEMORY__IMMI, _AddI__LoadI_memory__immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ADDI_RREGI__LOADI_MEMORY_, _AddI_rRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_ADDI__LOADI_MEMORY__RREGI, _AddI__LoadI_memory__rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, addI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, addI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, addI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, addI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, addI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, addI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, addI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, addI_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, addI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, addI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, addI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, addI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, addI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, addI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, addI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, addI_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, addI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, addI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, addI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, addI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, addI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, addI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, addI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, addI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, addI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, addI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, addI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, addI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, addI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, addI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, addI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, addI_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_AddL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML_M1];
        DFA_PRODUCTION__SET_VALID(_ADDL_RREGL_IMML_M1, _AddL_rRegL_immL_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMML_M1];
        DFA_PRODUCTION__SET_VALID(_ADDL__LOADL_MEMORY__IMML_M1, _AddL__LoadL_memory__immL_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) &&
        (
#line 6908 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseIncDec
#line 858 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML_M1]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, decL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, decL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, decL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, decL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, decL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, decL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, decL_rReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMML1) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMML1];
        DFA_PRODUCTION__SET_VALID(_ADDL__LOADL_MEMORY__IMML1, _AddL__LoadL_memory__immL1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMML1) &&
        (
#line 6882 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseIncDec
#line 878 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMML1]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, incL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, incL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, incL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, incL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, incL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, incL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, incL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, incL_rReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMML32];
        DFA_PRODUCTION__SET_VALID(_ADDL__LOADL_MEMORY__IMML32, _AddL__LoadL_memory__immL32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ADDL_RREGL__LOADL_MEMORY_, _AddL_rRegL__LoadL_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_ADDL__LOADL_MEMORY__RREGL, _AddL__LoadL_memory__rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, addL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, addL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, addL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, addL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, addL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, addL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, addL_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, addL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, addL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, addL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, addL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, addL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, addL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, addL_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML32]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, addL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, addL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, addL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, addL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, addL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, addL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, addL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, addL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, addL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, addL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, addL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, addL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, addL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, addL_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_RREGL_IMMI2) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_RREGL_IMMI2]+_kids[1]->_cost[IMML32];
        DFA_PRODUCTION__SET_VALID(_ADDL__LSHIFTL_RREGL_IMMI2_IMML32, _AddL__LShiftL_rRegL_immI2_immL32_rule, c)
    }
}
void  State::_sub_Op_AddP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[_SUBI_IMMI0_RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, subP_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, subP_rReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[IMML32]+100;
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c) {
        DFA_PRODUCTION__SET_VALID(RREGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, addP_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, addP_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c) {
        DFA_PRODUCTION__SET_VALID(RREGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, addP_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, addP_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP__DECODEN_RREGN___LSHIFTL__CONVI2L_RREGI__IMMI2) && STATE__VALID_CHILD(_kids[1], IMML32) &&
        
#line 3762 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_shift() == 0 && n->in(2)->in(3)->in(1)->as_Type()->type()->is_long()->_lo >= 0
#line 1128 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_ADDP__DECODEN_RREGN___LSHIFTL__CONVI2L_RREGI__IMMI2]+_kids[1]->_cost[IMML32]+10;
        DFA_PRODUCTION__SET_VALID(INDPOSINDEXSCALEOFFSETNARROW, indPosIndexScaleOffsetNarrow_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indPosIndexScaleOffsetNarrow_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaPPosIdxScaleOffNarrow_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_RREGN_) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__CONVI2L_RREGI__IMMI2) ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_RREGN_]+_kids[1]->_cost[_LSHIFTL__CONVI2L_RREGI__IMMI2];
        DFA_PRODUCTION__SET_VALID(_ADDP__DECODEN_RREGN___LSHIFTL__CONVI2L_RREGI__IMMI2, _AddP__DecodeN_rRegN___LShiftL__ConvI2L_rRegI__immI2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP__DECODEN_RREGN___LSHIFTL_RREGL_IMMI2) && STATE__VALID_CHILD(_kids[1], IMML32) &&
        
#line 3744 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_shift() == 0
#line 1186 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_ADDP__DECODEN_RREGN___LSHIFTL_RREGL_IMMI2]+_kids[1]->_cost[IMML32]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXSCALEOFFSETNARROW, indIndexScaleOffsetNarrow_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexScaleOffsetNarrow_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaPIdxScaleOffNarrow_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_RREGN_) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_RREGL_IMMI2) ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_RREGN_]+_kids[1]->_cost[_LSHIFTL_RREGL_IMMI2];
        DFA_PRODUCTION__SET_VALID(_ADDP__DECODEN_RREGN___LSHIFTL_RREGL_IMMI2, _AddP__DecodeN_rRegN___LShiftL_rRegL_immI2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_RREGN_) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_RREGL_IMMI2) &&
        
#line 3727 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_shift() == 0
#line 1244 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_RREGN_]+_kids[1]->_cost[_LSHIFTL_RREGL_IMMI2]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXSCALENARROW, indIndexScaleNarrow_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexScaleNarrow_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaPIdxScaleNarrow_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_RREGN_) && STATE__VALID_CHILD(_kids[1], RREGL) &&
        
#line 3710 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_shift() == 0
#line 1298 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_RREGN_]+_kids[1]->_cost[RREGL]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXNARROW, indIndexNarrow_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexNarrow_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP__DECODEN_RREGN__RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) &&
        
#line 3693 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_shift() == 0
#line 1310 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_ADDP__DECODEN_RREGN__RREGL]+_kids[1]->_cost[IMML32]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXOFFSETNARROW, indIndexOffsetNarrow_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexOffsetNarrow_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaPIdxOffNarrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaPIdxOffNarrow_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_RREGN_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_RREGN_]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_ADDP__DECODEN_RREGN__RREGL, _AddP__DecodeN_rRegN__rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_RREGN_) && STATE__VALID_CHILD(_kids[1], IMML32) &&
        
#line 3677 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_shift() == 0
#line 1368 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_RREGN_]+_kids[1]->_cost[IMML32];
        DFA_PRODUCTION__SET_VALID(INDOFFSET32NARROW, indOffset32Narrow_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indOffset32Narrow_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaP32Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaP32Narrow_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_RREGN_) && STATE__VALID_CHILD(_kids[1], IMML8) &&
        
#line 3661 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_shift() == 0
#line 1422 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_RREGN_]+_kids[1]->_cost[IMML8];
        DFA_PRODUCTION__SET_VALID(INDOFFSET8NARROW, indOffset8Narrow_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indOffset8Narrow_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaP8Narrow_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaP8Narrow_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_RREGN_) && STATE__VALID_CHILD(_kids[1], IMML32) &&
        
#line 3628 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_shift() == Address::times_8)
#line 1476 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_RREGN_]+_kids[1]->_cost[IMML32]+10;
        DFA_PRODUCTION__SET_VALID(INDCOMPRESSEDOOPOFFSET, indCompressedOopOffset_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indCompressedOopOffset_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaPCompressedOopOffset_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaPCompressedOopOffset_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP_ANY_REGP__LSHIFTL__CONVI2L_RREGI__IMMI2) && STATE__VALID_CHILD(_kids[1], IMML32) &&
        
#line 3611 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->in(2)->in(3)->in(1)->as_Type()->type()->is_long()->_lo >= 0
#line 1530 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_ADDP_ANY_REGP__LSHIFTL__CONVI2L_RREGI__IMMI2]+_kids[1]->_cost[IMML32]+10;
        DFA_PRODUCTION__SET_VALID(INDPOSINDEXSCALEOFFSET, indPosIndexScaleOffset_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indPosIndexScaleOffset_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaPPosIdxScaleOff_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], ANY_REGP) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__CONVI2L_RREGI__IMMI2) ) {
      unsigned int c = _kids[0]->_cost[ANY_REGP]+_kids[1]->_cost[_LSHIFTL__CONVI2L_RREGI__IMMI2];
        DFA_PRODUCTION__SET_VALID(_ADDP_ANY_REGP__LSHIFTL__CONVI2L_RREGI__IMMI2, _AddP_any_RegP__LShiftL__ConvI2L_rRegI__immI2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP_ANY_REGP__LSHIFTL_RREGL_IMMI2) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[_ADDP_ANY_REGP__LSHIFTL_RREGL_IMMI2]+_kids[1]->_cost[IMML32]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXSCALEOFFSET, indIndexScaleOffset_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexScaleOffset_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaPIdxScaleOff_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], ANY_REGP) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_RREGL_IMMI2) ) {
      unsigned int c = _kids[0]->_cost[ANY_REGP]+_kids[1]->_cost[_LSHIFTL_RREGL_IMMI2];
        DFA_PRODUCTION__SET_VALID(_ADDP_ANY_REGP__LSHIFTL_RREGL_IMMI2, _AddP_any_RegP__LShiftL_rRegL_immI2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], ANY_REGP) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_RREGL_IMMI2) ) {
      unsigned int c = _kids[0]->_cost[ANY_REGP]+_kids[1]->_cost[_LSHIFTL_RREGL_IMMI2]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXSCALE, indIndexScale_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexScale_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaPIdxScale_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], ANY_REGP) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[ANY_REGP]+_kids[1]->_cost[RREGL]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEX, indIndex_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndex_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP_ANY_REGP_RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[_ADDP_ANY_REGP_RREGL]+_kids[1]->_cost[IMML32]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXOFFSET, indIndexOffset_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexOffset_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaPIdxOff_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], ANY_REGP) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[ANY_REGP]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_ADDP_ANY_REGP_RREGL, _AddP_any_RegP_rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], ANY_REGP) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[ANY_REGP]+_kids[1]->_cost[IMML32];
        DFA_PRODUCTION__SET_VALID(INDOFFSET32, indOffset32_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indOffset32_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaP32_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], ANY_REGP) && STATE__VALID_CHILD(_kids[1], IMML8) ) {
      unsigned int c = _kids[0]->_cost[ANY_REGP]+_kids[1]->_cost[IMML8];
        DFA_PRODUCTION__SET_VALID(INDOFFSET8, indOffset8_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indOffset8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, leaP8_rule, c+110)
      }
    }
}
void  State::_sub_Op_AndI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_ANDI_RREGI_IMMI, _AndI_rRegI_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _CMPLTMASK_RREGI_RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_CMPLTMASK_RREGI_RREGI]+300;
        DFA_PRODUCTION__SET_VALID(RREGI, and_cmpLTMask_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, and_cmpLTMask_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, and_cmpLTMask_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, and_cmpLTMask_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, and_cmpLTMask_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, and_cmpLTMask_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, and_cmpLTMask_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, and_cmpLTMask_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CMPLTMASK_RREGI_RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_CMPLTMASK_RREGI_RREGI]+_kids[1]->_cost[RREGI]+300;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, and_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, and_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, and_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, and_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, and_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, and_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, and_cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, and_cmpLTMask_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _CMPLTMASK_RREGI_RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_CMPLTMASK_RREGI_RREGI];
        DFA_PRODUCTION__SET_VALID(_ANDI_RREGI__CMPLTMASK_RREGI_RREGI, _AndI_rRegI__CmpLTMask_rRegI_rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CMPLTMASK_RREGI_RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_CMPLTMASK_RREGI_RREGI]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_ANDI__CMPLTMASK_RREGI_RREGI_RREGI, _AndI__CmpLTMask_rRegI_rRegI_rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__IMMI_M1) &&
        (
#line 8699 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 1904 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__IMMI_M1]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsrI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsrI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsrI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsrI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsrI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsrI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsrI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsrI_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDI__LOADI_MEMORY__IMMI_M1) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) &&
        (
#line 8699 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 1939 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ADDI__LOADI_MEMORY__IMMI_M1]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsrI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsrI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsrI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsrI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsrI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsrI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsrI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsrI_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _ADDI_RREGI_IMMI_M1) &&
        (
#line 8684 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 1974 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_ADDI_RREGI_IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsrI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsrI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsrI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsrI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsrI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsrI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsrI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsrI_rReg_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDI_RREGI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], RREGI) &&
        (
#line 8684 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2009 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ADDI_RREGI_IMMI_M1]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsrI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsrI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsrI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsrI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsrI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsrI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsrI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsrI_rReg_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0__LOADI_MEMORY_) &&
        (
#line 8639 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2044 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[_SUBI_IMMI0__LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsiI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsiI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsiI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsiI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsiI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsiI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsiI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsiI_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBI_IMMI0__LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) &&
        (
#line 8639 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2079 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[1]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_SUBI_IMMI0__LOADI_MEMORY_]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsiI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsiI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsiI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsiI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsiI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsiI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsiI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsiI_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_RREGI) &&
        (
#line 8626 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2114 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_SUBI_IMMI0_RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsiI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsiI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsiI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsiI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsiI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsiI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsiI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsiI_rReg_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBI_IMMI0_RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) &&
        (
#line 8626 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2149 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_SUBI_IMMI0_RREGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsiI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsiI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsiI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsiI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsiI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsiI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsiI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsiI_rReg_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _XORI_RREGI_IMMI_M1) &&
        (
#line 8613 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2184 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_XORI_RREGI_IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andnI_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andnI_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andnI_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andnI_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andnI_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andnI_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andnI_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andnI_rReg_rReg_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI_RREGI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], RREGI) &&
        (
#line 8613 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2219 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORI_RREGI_IMMI_M1]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andnI_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andnI_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andnI_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andnI_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andnI_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andnI_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andnI_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andnI_rReg_rReg_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], _XORI_RREGI_IMMI_M1) &&
        (
#line 8599 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2254 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[_XORI_RREGI_IMMI_M1]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andnI_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andnI_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andnI_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andnI_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andnI_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andnI_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andnI_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andnI_rReg_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI_RREGI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) &&
        (
#line 8599 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2289 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORI_RREGI_IMMI_M1]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andnI_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andnI_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andnI_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andnI_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andnI_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andnI_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andnI_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andnI_rReg_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADI_MEMORY__IMMI, _AndI__LoadI_memory__immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ANDI_RREGI__LOADI_MEMORY_, _AndI_rRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADI_MEMORY__RREGI, _AndI__LoadI_memory__rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andI_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andI_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_65535];
        DFA_PRODUCTION__SET_VALID(_ANDI_RREGI_IMMI_65535, _AndI_rRegI_immI_65535_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_65535]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andI_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andI_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andI_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andI_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andI_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andI_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andI_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andI_rReg_imm65535_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_255];
        DFA_PRODUCTION__SET_VALID(_ANDI_RREGI_IMMI_255, _AndI_rRegI_immI_255_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_255]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andI_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andI_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andI_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andI_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andI_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andI_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andI_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andI_rReg_imm255_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, andI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, andI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, andI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, andI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, andI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, andI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, andI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, andI_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMU31) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMU31];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADI_MEMORY__IMMU31, _AndI__LoadI_memory__immU31_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_65535];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADI_MEMORY__IMMI_65535, _AndI__LoadI_memory__immI_65535_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_255];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADI_MEMORY__IMMI_255, _AndI__LoadI_memory__immI_255_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_65535]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadI2US_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_255]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadI2UB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI16) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_MEMORY_]+_kids[1]->_cost[IMMI16];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADUS_MEMORY__IMMI16, _AndI__LoadUS_memory__immI16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_MEMORY_]+_kids[1]->_cost[IMMI_255];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADUS_MEMORY__IMMI_255, _AndI__LoadUS_memory__immI_255_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUB_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_LOADUB_MEMORY_]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADUB_MEMORY__IMMI8, _AndI__LoadUB_memory__immI8_rule, c)
    }
}
void  State::_sub_Op_AndL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML32];
        DFA_PRODUCTION__SET_VALID(_ANDL_RREGL_IMML32, _AndL_rRegL_immL32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML_32BITS]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, zerox_long_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, zerox_long_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, zerox_long_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, zerox_long_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, zerox_long_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, zerox_long_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, zerox_long_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_RREGI_) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_RREGI_]+_kids[1]->_cost[IMML_32BITS]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, convI2L_reg_reg_zex_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, convI2L_reg_reg_zex_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, convI2L_reg_reg_zex_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, convI2L_reg_reg_zex_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, convI2L_reg_reg_zex_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, convI2L_reg_reg_zex_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, convI2L_reg_reg_zex_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], _ADDL__LOADL_MEMORY__IMML_M1) &&
        (
#line 9046 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2652 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[_ADDL__LOADL_MEMORY__IMML_M1]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsrL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsrL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsrL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsrL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsrL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsrL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsrL_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDL__LOADL_MEMORY__IMML_M1) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) &&
        (
#line 9046 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2684 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ADDL__LOADL_MEMORY__IMML_M1]+_kids[1]->_cost[_LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsrL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsrL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsrL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsrL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsrL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsrL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsrL_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _ADDL_RREGL_IMML_M1) &&
        (
#line 9031 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2716 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_ADDL_RREGL_IMML_M1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsrL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsrL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsrL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsrL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsrL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsrL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsrL_rReg_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDL_RREGL_IMML_M1) && STATE__VALID_CHILD(_kids[1], RREGL) &&
        (
#line 9031 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2748 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ADDL_RREGL_IMML_M1]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsrL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsrL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsrL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsrL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsrL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsrL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsrL_rReg_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], _SUBL_IMML0__LOADL_MEMORY_) &&
        (
#line 8986 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2780 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[_SUBL_IMML0__LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsiL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsiL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsiL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsiL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsiL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsiL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsiL_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBL_IMML0__LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) &&
        (
#line 8986 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2812 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[1]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_SUBL_IMML0__LOADL_MEMORY_]+_kids[1]->_cost[_LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsiL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsiL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsiL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsiL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsiL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsiL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsiL_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _SUBL_IMML0_RREGL) &&
        (
#line 8973 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2844 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_SUBL_IMML0_RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsiL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsiL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsiL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsiL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsiL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsiL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsiL_rReg_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBL_IMML0_RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) &&
        (
#line 8973 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2876 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_SUBL_IMML0_RREGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsiL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsiL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsiL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsiL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsiL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsiL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsiL_rReg_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _XORL_RREGL_IMML_M1) &&
        (
#line 8960 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2908 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_XORL_RREGL_IMML_M1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andnL_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andnL_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andnL_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andnL_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andnL_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andnL_rReg_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andnL_rReg_rReg_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL_RREGL_IMML_M1) && STATE__VALID_CHILD(_kids[1], RREGL) &&
        (
#line 8960 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2940 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORL_RREGL_IMML_M1]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andnL_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andnL_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andnL_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andnL_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andnL_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andnL_rReg_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andnL_rReg_rReg_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], _XORL_RREGL_IMML_M1) &&
        (
#line 8946 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 2972 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[_XORL_RREGL_IMML_M1]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andnL_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andnL_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andnL_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andnL_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andnL_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andnL_rReg_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andnL_rReg_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL_RREGL_IMML_M1) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) &&
        (
#line 8946 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 3004 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORL_RREGL_IMML_M1]+_kids[1]->_cost[_LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andnL_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andnL_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andnL_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andnL_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andnL_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andnL_rReg_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andnL_rReg_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMML32];
        DFA_PRODUCTION__SET_VALID(_ANDL__LOADL_MEMORY__IMML32, _AndL__LoadL_memory__immL32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ANDL_RREGL__LOADL_MEMORY_, _AndL_rRegL__LoadL_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_ANDL__LOADL_MEMORY__RREGL, _AndL__LoadL_memory__rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andL_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andL_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML32]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML_65535) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML_65535]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andL_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andL_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andL_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andL_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andL_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andL_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andL_rReg_imm65535_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML_255) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML_255]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andL_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andL_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andL_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andL_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andL_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andL_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andL_rReg_imm255_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andL_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L__LOADI_MEMORY__) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L__LOADI_MEMORY__]+_kids[1]->_cost[IMML_32BITS]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadUI2L_rule, c)
      }
    }
}
void  State::_sub_Op_AryEq(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RDI_REGP) && STATE__VALID_CHILD(_kids[1], RSI_REGP) ) {
      unsigned int c = _kids[0]->_cost[RDI_REGP]+_kids[1]->_cost[RSI_REGP]+100;
        DFA_PRODUCTION__SET_VALID(RAX_REGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, array_equals_rule, c)
    }
}
void  State::_sub_Op_Binary(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RDI_REGP) && STATE__VALID_CHILD(_kids[1], RSI_REGP) ) {
      unsigned int c = _kids[0]->_cost[RDI_REGP]+_kids[1]->_cost[RSI_REGP];
        DFA_PRODUCTION__SET_VALID(_BINARY_RDI_REGP_RSI_REGP, _Binary_rdi_RegP_rsi_RegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RSI_REGP) && STATE__VALID_CHILD(_kids[1], RAX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RSI_REGP]+_kids[1]->_cost[RAX_REGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_RSI_REGP_RAX_REGI, _Binary_rsi_RegP_rax_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RSI_REGP) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RSI_REGP]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_BINARY_RSI_REGP_IMMI, _Binary_rsi_RegP_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RDI_REGP) && STATE__VALID_CHILD(_kids[1], RDX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RDI_REGP]+_kids[1]->_cost[RDX_REGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_RDI_REGP_RDX_REGI, _Binary_rdi_RegP_rdx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RSI_REGP) && STATE__VALID_CHILD(_kids[1], RDX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RSI_REGP]+_kids[1]->_cost[RDX_REGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_RSI_REGP_RDX_REGI, _Binary_rsi_RegP_rdx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RDI_REGP) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RDI_REGP]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_RDI_REGP_RCX_REGI, _Binary_rdi_RegP_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RAX_REGN) && STATE__VALID_CHILD(_kids[1], RREGN) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGN]+_kids[1]->_cost[RREGN];
        DFA_PRODUCTION__SET_VALID(_BINARY_RAX_REGN_RREGN, _Binary_rax_RegN_rRegN_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RAX_REGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGL]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_BINARY_RAX_REGL_RREGL, _Binary_rax_RegL_rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RAX_REGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGI]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_RAX_REGI_RREGI, _Binary_rax_RegI_rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RAX_REGP) && STATE__VALID_CHILD(_kids[1], RREGP) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGP]+_kids[1]->_cost[RREGP];
        DFA_PRODUCTION__SET_VALID(_BINARY_RAX_REGP_RREGP, _Binary_rax_RegP_rRegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD];
        DFA_PRODUCTION__SET_VALID(_BINARY_REGD_REGD, _Binary_regD_regD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF];
        DFA_PRODUCTION__SET_VALID(_BINARY_REGF_REGF, _Binary_regF_regF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_BINARY_RREGL__LOADL_MEMORY_, _Binary_rRegL__LoadL_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_BINARY_RREGL_RREGL, _Binary_rRegL_rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], RREGP) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[RREGP];
        DFA_PRODUCTION__SET_VALID(_BINARY_RREGP_RREGP, _Binary_rRegP_rRegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGN) && STATE__VALID_CHILD(_kids[1], RREGN) ) {
      unsigned int c = _kids[0]->_cost[RREGN]+_kids[1]->_cost[RREGN];
        DFA_PRODUCTION__SET_VALID(_BINARY_RREGN_RREGN, _Binary_rRegN_rRegN_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_BINARY_RREGI__LOADI_MEMORY_, _Binary_rRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPUCF) && STATE__VALID_CHILD(_kids[1], RFLAGSREGUCF) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUCF]+_kids[1]->_cost[RFLAGSREGUCF];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOPUCF_RFLAGSREGUCF, _Binary_cmpOpUCF_rFlagsRegUCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPU) && STATE__VALID_CHILD(_kids[1], RFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOPU]+_kids[1]->_cost[RFLAGSREGU];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOPU_RFLAGSREGU, _Binary_cmpOpU_rFlagsRegU_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_RREGI_RREGI, _Binary_rRegI_rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], RFLAGSREG) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[RFLAGSREG];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOP_RFLAGSREG, _Binary_cmpOp_rFlagsReg_rule, c)
    }
}
void  State::_sub_Op_Bool(const Node *n){
    if(         
#line 3925 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->as_Bool()->_test._test == BoolTest::ne ||
            n->as_Bool()->_test._test == BoolTest::eq
#line 3339 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOPUCF2, cmpOpUCF2_rule, c)
    }
    if(         
#line 3904 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->as_Bool()->_test._test == BoolTest::lt ||
            n->as_Bool()->_test._test == BoolTest::ge ||
            n->as_Bool()->_test._test == BoolTest::le ||
            n->as_Bool()->_test._test == BoolTest::gt
#line 3350 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOPUCF, cmpOpUCF_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOPU, cmpOpU_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOP, cmpOp_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, bytes_reverse_int_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, bytes_reverse_long_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, bytes_reverse_long_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, bytes_reverse_long_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, bytes_reverse_long_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, bytes_reverse_long_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, bytes_reverse_long_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, bytes_reverse_long_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesUS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, bytes_reverse_unsigned_short_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, bytes_reverse_short_rule, c)
    }
}
void  State::_sub_Op_CallDynamicJava(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallDynamicJavaDirect_rule, c)
    }
}
void  State::_sub_Op_CallLeaf(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallLeafDirect_rule, c)
    }
}
void  State::_sub_Op_CallLeafNoFP(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallLeafNoFPDirect_rule, c)
    }
}
void  State::_sub_Op_CallRuntime(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallRuntimeDirect_rule, c)
    }
}
void  State::_sub_Op_CallStaticJava(const Node *n){
    if(         (
#line 11433 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
((CallStaticJavaNode*) n)->is_method_handle_invoke()
#line 3447 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallStaticJavaHandle_rule, c)
    }
    if(         (
#line 11417 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!((CallStaticJavaNode*) n)->is_method_handle_invoke()
#line 3455 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = 300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallStaticJavaDirect_rule, c)
      }
    }
}
void  State::_sub_Op_CastII(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(RREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, castII_rule, c)
    }
}
void  State::_sub_Op_CastX2P(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, castX2P_rule, c)
    }
}
void  State::_sub_Op_CastP2X(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], ANY_REGP) ) {
      unsigned int c = _kids[0]->_cost[ANY_REGP];
        DFA_PRODUCTION__SET_VALID(_CASTP2X_ANY_REGP_, _CastP2X_any_RegP__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_RREGN_) ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_RREGN_];
        DFA_PRODUCTION__SET_VALID(_CASTP2X__DECODEN_RREGN__, _CastP2X__DecodeN_rRegN___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) ) {
      unsigned int c = _kids[0]->_cost[RREGP];
        DFA_PRODUCTION__SET_VALID(_CASTP2X_RREGP_, _CastP2X_rRegP__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, castP2X_rule, c)
    }
}
void  State::_sub_Op_CastPP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGP) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+100;
        DFA_PRODUCTION__SET_VALID(RREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, castPP_rule, c)
    }
}
void  State::_sub_Op_CheckCastPP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGP) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+100;
        DFA_PRODUCTION__SET_VALID(RREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, checkCastPP_rule, c)
    }
}
void  State::_sub_Op_ClearArray(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RCX_REGL) && STATE__VALID_CHILD(_kids[1], RDI_REGP) &&
        (
#line 10262 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseFastStosb
#line 3564 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RCX_REGL]+_kids[1]->_cost[RDI_REGP]+100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, rep_fast_stosb_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RCX_REGL) && STATE__VALID_CHILD(_kids[1], RDI_REGP) &&
        (
#line 10247 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseFastStosb
#line 3573 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RCX_REGL]+_kids[1]->_cost[RDI_REGP]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, rep_stos_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_RFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_REGD_REGD) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_RFLAGSREGUCF]+_kids[1]->_cost[_BINARY_REGD_REGD]+200;
        DFA_PRODUCTION__SET_VALID(REGD, cmovD_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_REGD_REGD) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_REGD_REGD]+200;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, cmovD_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_REGD_REGD) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_REGD_REGD]+200;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, cmovD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_CMoveF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_RFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_REGF_REGF) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_RFLAGSREGUCF]+_kids[1]->_cost[_BINARY_REGF_REGF]+200;
        DFA_PRODUCTION__SET_VALID(REGF, cmovF_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_REGF_REGF) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_REGF_REGF]+200;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, cmovF_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_REGF_REGF) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_REGF_REGF]+200;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, cmovF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_CMoveI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_RFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGI__LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_RFLAGSREGUCF]+_kids[1]->_cost[_BINARY_RREGI__LOADI_MEMORY_]+250;
        DFA_PRODUCTION__SET_VALID(RREGI, cmovI_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmovI_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmovI_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmovI_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmovI_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmovI_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmovI_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmovI_memUCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGI__LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_RREGI__LOADI_MEMORY_]+250;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmovI_memU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGI__LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_RREGI__LOADI_MEMORY_]+250;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmovI_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_RFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGI_RREGI) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_RFLAGSREGUCF]+_kids[1]->_cost[_BINARY_RREGI_RREGI]+200;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmovI_regUCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGI_RREGI) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_RREGI_RREGI]+200;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmovI_regU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGI_RREGI) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_RREGI_RREGI]+200;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmovI_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_RFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGL__LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_RFLAGSREGUCF]+_kids[1]->_cost[_BINARY_RREGL__LOADL_MEMORY_]+200;
        DFA_PRODUCTION__SET_VALID(RREGL, cmovL_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, cmovL_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, cmovL_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, cmovL_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, cmovL_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, cmovL_memUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, cmovL_memUCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGL__LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_RREGL__LOADL_MEMORY_]+200;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, cmovL_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, cmovL_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, cmovL_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, cmovL_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, cmovL_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, cmovL_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, cmovL_memU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_RFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGL_RREGL) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_RFLAGSREGUCF]+_kids[1]->_cost[_BINARY_RREGL_RREGL]+200;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, cmovL_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, cmovL_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, cmovL_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, cmovL_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, cmovL_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, cmovL_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, cmovL_regUCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGL_RREGL) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_RREGL_RREGL]+200;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, cmovL_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, cmovL_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, cmovL_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, cmovL_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, cmovL_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, cmovL_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, cmovL_regU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGL__LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_RREGL__LOADL_MEMORY_]+200;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, cmovL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, cmovL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, cmovL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, cmovL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, cmovL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, cmovL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, cmovL_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGL_RREGL) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_RREGL_RREGL]+200;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, cmovL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, cmovL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, cmovL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, cmovL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, cmovL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, cmovL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, cmovL_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_RFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGP_RREGP) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_RFLAGSREGUCF]+_kids[1]->_cost[_BINARY_RREGP_RREGP]+200;
        DFA_PRODUCTION__SET_VALID(RREGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, cmovP_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, cmovP_regUCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGP_RREGP) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_RREGP_RREGP]+200;
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c) {
        DFA_PRODUCTION__SET_VALID(RREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, cmovP_regU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGP_RREGP) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_RREGP_RREGP]+200;
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c) {
        DFA_PRODUCTION__SET_VALID(RREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, cmovP_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_RFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGN_RREGN) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_RFLAGSREGUCF]+_kids[1]->_cost[_BINARY_RREGN_RREGN]+200;
        DFA_PRODUCTION__SET_VALID(RREGN, cmovN_regUCF_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGN, cmovN_regUCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGN_RREGN) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_RREGN_RREGN]+200;
      if (STATE__NOT_YET_VALID(RREGN) || _cost[RREGN] > c) {
        DFA_PRODUCTION__SET_VALID(RREGN, cmovN_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGN) || _cost[RAX_REGN] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGN, cmovN_regU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_RREGN_RREGN) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_RREGN_RREGN]+200;
      if (STATE__NOT_YET_VALID(RREGN) || _cost[RREGN] > c) {
        DFA_PRODUCTION__SET_VALID(RREGN, cmovN_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGN) || _cost[RAX_REGN] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGN, cmovN_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADN_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMN0) &&
        (
#line 10844 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_base() == NULL && (Universe::narrow_klass_base() == NULL)
#line 4082 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADN_MEMORY_]+_kids[1]->_cost[IMMN0]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testN_mem_reg0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADN_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMN0) &&
        (
#line 10831 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_base() != NULL
#line 4091 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADN_MEMORY_]+_kids[1]->_cost[IMMN0]+500;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testN_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGN) && STATE__VALID_CHILD(_kids[1], IMMN0) ) {
      unsigned int c = _kids[0]->_cost[RREGN]+_kids[1]->_cost[IMMN0]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testN_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMNKLASS) && STATE__VALID_CHILD(_kids[1], _LOADNKLASS_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[IMMNKLASS]+_kids[1]->_cost[_LOADNKLASS_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compN_mem_imm_klass_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGN) && STATE__VALID_CHILD(_kids[1], IMMNKLASS) ) {
      unsigned int c = _kids[0]->_cost[RREGN]+_kids[1]->_cost[IMMNKLASS]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compN_rReg_imm_klass_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMN) && STATE__VALID_CHILD(_kids[1], _LOADN_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[IMMN]+_kids[1]->_cost[_LOADN_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compN_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGN) && STATE__VALID_CHILD(_kids[1], IMMN) ) {
      unsigned int c = _kids[0]->_cost[RREGN]+_kids[1]->_cost[IMMN]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compN_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGN) && STATE__VALID_CHILD(_kids[1], _LOADN_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGN]+_kids[1]->_cost[_LOADN_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compN_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGN) && STATE__VALID_CHILD(_kids[1], RREGN) ) {
      unsigned int c = _kids[0]->_cost[RREGN]+_kids[1]->_cost[RREGN]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compN_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREGUCF, cmpD_cc_immCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+145;
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, cmpD_cc_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGUCF) || _cost[RFLAGSREGUCF] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGUCF, cmpD_cc_memCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+145;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, cmpD_cc_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGUCF) || _cost[RFLAGSREGUCF] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGUCF, cmpD_cc_reg_CF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+145;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, cmpD_cc_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpD3(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+275;
        DFA_PRODUCTION__SET_VALID(RREGI, cmpD_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmpD_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmpD_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmpD_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmpD_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmpD_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmpD_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmpD_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+275;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmpD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmpD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmpD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmpD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmpD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmpD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmpD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmpD_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+275;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmpD_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREGUCF, cmpF_cc_immCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+145;
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, cmpF_cc_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGUCF) || _cost[RFLAGSREGUCF] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGUCF, cmpF_cc_memCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+145;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, cmpF_cc_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGUCF) || _cost[RFLAGSREGUCF] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGUCF, cmpF_cc_reg_CF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+145;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, cmpF_cc_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpF3(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+275;
        DFA_PRODUCTION__SET_VALID(RREGI, cmpF_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmpF_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmpF_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmpF_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmpF_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmpF_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmpF_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmpF_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+275;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmpF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmpF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmpF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmpF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmpF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmpF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmpF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmpF_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+275;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmpF_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADI_MEMORY__RREGI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADI_MEMORY__RREGI]+_kids[1]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testI_reg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_RREGI__LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_RREGI__LOADI_MEMORY_]+_kids[1]->_cost[IMMI0]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testI_reg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_RREGI_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_RREGI_IMMI]+_kids[1]->_cost[IMMI0]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testI_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI0]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testI_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+500;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, compI_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, compI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, compI_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _ANDL__LOADL_MEMORY__RREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[_ANDL__LOADL_MEMORY__RREGL]+_kids[1]->_cost[IMML0]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testL_reg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_RREGL__LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_RREGL__LOADL_MEMORY_]+_kids[1]->_cost[IMML0]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testL_reg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_RREGL_IMML32) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_RREGL_IMML32]+_kids[1]->_cost[IMML0]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testL_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML0]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testL_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, compL_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML32]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, compL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, compL_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpL3(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL]+275;
        DFA_PRODUCTION__SET_VALID(RREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmpL3_reg_reg_rule, c)
    }
}
void  State::_sub_Op_CmpLTMask(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_CMPLTMASK_RREGI_RREGI, _CmpLTMask_rRegI_rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmpLTMask0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+400;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, cmpLTMask_rule, c)
      }
    }
}
void  State::_sub_Op_CmpP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _PARTIALSUBTYPECHECK_RSI_REGP_RAX_REGP) && STATE__VALID_CHILD(_kids[1], IMMP0) ) {
      unsigned int c = _kids[0]->_cost[_PARTIALSUBTYPECHECK_RSI_REGP_RAX_REGP]+_kids[1]->_cost[IMMP0]+1000;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, partialSubtypeCheck_vs_Zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADP_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMP0) &&
        (
#line 10749 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_base() == NULL) && (Universe::narrow_klass_base() == NULL)
#line 4510 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADP_MEMORY_]+_kids[1]->_cost[IMMP0]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testP_mem_reg0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADP_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMP0) &&
        (
#line 10736 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseCompressedOops || (Universe::narrow_oop_base() != NULL)
#line 4521 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADP_MEMORY_]+_kids[1]->_cost[IMMP0]+500;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testP_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], IMMP0) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[IMMP0]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, testP_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], _LOADP_MEMORY_) &&
        (
#line 10711 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->in(2)->in(2)->bottom_type()->reloc() == relocInfo::none
#line 4538 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[_LOADP_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compP_mem_rReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], _LOADP_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[_LOADP_MEMORY_]+500;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compP_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], RREGP) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[RREGP]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compP_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpU(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, testU_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+500;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compU_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compU_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREGU, compU_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndSwapI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_RAX_REGI_RREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_RAX_REGI_RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, compareAndSwapI_rule, c)
    }
}
void  State::_sub_Op_CompareAndSwapL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_RAX_REGL_RREGL) &&
        (
#line 7104 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
VM_Version::supports_cx8()
#line 4599 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_RAX_REGL_RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, compareAndSwapL_rule, c)
    }
}
void  State::_sub_Op_CompareAndSwapP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_RAX_REGP_RREGP) &&
        (
#line 7080 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
VM_Version::supports_cx8()
#line 4618 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_RAX_REGP_RREGP]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, compareAndSwapP_rule, c)
    }
}
void  State::_sub_Op_CompareAndSwapN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_RAX_REGN_RREGN) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_RAX_REGN_RREGN]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, compareAndSwapN_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, compareAndSwapN_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, compareAndSwapN_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, compareAndSwapN_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, compareAndSwapN_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, compareAndSwapN_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, compareAndSwapN_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, compareAndSwapN_rule, c)
    }
}
void  State::_sub_Op_GetAndAddI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, xaddI_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, xaddI_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, xaddI_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, xaddI_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, xaddI_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, xaddI_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, xaddI_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, xaddI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 7170 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->as_LoadStore()->result_not_used()
#line 4663 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI]+100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xaddI_no_res_rule, c)
    }
}
void  State::_sub_Op_GetAndAddL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, xaddL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, xaddL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, xaddL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, xaddL_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, xaddL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, xaddL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, xaddL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMML32) &&
        (
#line 7193 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->as_LoadStore()->result_not_used()
#line 4685 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMML32]+100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xaddL_no_res_rule, c)
    }
}
void  State::_sub_Op_GetAndSetI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, xchgI_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, xchgI_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, xchgI_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, xchgI_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, xchgI_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, xchgI_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, xchgI_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, xchgI_rule, c)
    }
}
void  State::_sub_Op_GetAndSetL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, xchgL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, xchgL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, xchgL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, xchgL_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, xchgL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, xchgL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, xchgL_rule, c)
    }
}
void  State::_sub_Op_GetAndSetP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGP) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGP]+100;
        DFA_PRODUCTION__SET_VALID(RREGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, xchgP_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, xchgP_rule, c)
    }
}
void  State::_sub_Op_GetAndSetN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGN) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGN]+100;
        DFA_PRODUCTION__SET_VALID(RREGN, xchgN_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGN, xchgN_rule, c)
    }
}
void  State::_sub_Op_ConN(const Node *n){
    if(         
#line 2878 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->get_narrowcon() == 0
#line 4748 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMN0, immN0_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGN, loadConN0_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGN, loadConN0_rule, c+100)
    }
    {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMMN, immN_rule, c)
      if (STATE__NOT_YET_VALID(RREGN) || _cost[RREGN] > c+125) {
        DFA_PRODUCTION__SET_VALID(RREGN, loadConN_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(RAX_REGN) || _cost[RAX_REGN] > c+125) {
        DFA_PRODUCTION__SET_VALID(RAX_REGN, loadConN_rule, c+125)
      }
    }
   if ( /* RREGN KNOWN_VALID || */ _cost[RREGN] > 125) {
     DFA_PRODUCTION(RREGN, loadConN_rule, 125)
   }
   if ( /* RAX_REGN KNOWN_VALID || */ _cost[RAX_REGN] > 125) {
     DFA_PRODUCTION(RAX_REGN, loadConN_rule, 125)
   }
}
void  State::_sub_Op_ConNKlass(const Node *n){
    {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMMNKLASS, immNKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGN, loadConNKlass_rule, c+125)
        DFA_PRODUCTION__SET_VALID(RAX_REGN, loadConNKlass_rule, c+125)
    }
     DFA_PRODUCTION(RREGN, loadConNKlass_rule, 125)	  // overwrites higher cost rule
     DFA_PRODUCTION(RAX_REGN, loadConNKlass_rule, 125)	  // overwrites higher cost rule
}
void  State::_sub_Op_ConD(const Node *n){
    {
      unsigned int c = 15;
        DFA_PRODUCTION__SET_VALID(IMMD, immD_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, loadConD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+125+95)
    }
    if(         
#line 3029 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
jlong_cast(n->getd()) == 0
#line 4792 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMD0, immD0_rule, c)
        DFA_PRODUCTION(REGD, loadConD0_rule, c+100)	  // overwrites higher cost rule
        DFA_PRODUCTION(STACKSLOTD, storeSSD_rule, c+100+95)	  // overwrites higher cost rule
    }
   if ( /* REGD KNOWN_VALID || */ _cost[REGD] > 125) {
     DFA_PRODUCTION(REGD, loadConD_rule, 125)
   }
   if ( /* STACKSLOTD KNOWN_VALID || */ _cost[STACKSLOTD] > 125+95) {
     DFA_PRODUCTION(STACKSLOTD, storeSSD_rule, 125+95)
   }
}
void  State::_sub_Op_ConF(const Node *n){
    {
      unsigned int c = 15;
        DFA_PRODUCTION__SET_VALID(IMMF, immF_rule, c)
        DFA_PRODUCTION__SET_VALID(REGF, loadConF_rule, c+125)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+125+95)
    }
    if(         
#line 3008 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
jint_cast(n->getf()) == 0
#line 4816 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMF0, immF0_rule, c)
        DFA_PRODUCTION(REGF, loadConF0_rule, c+100)	  // overwrites higher cost rule
        DFA_PRODUCTION(STACKSLOTF, storeSSF_rule, c+100+95)	  // overwrites higher cost rule
    }
   if ( /* REGF KNOWN_VALID || */ _cost[REGF] > 125) {
     DFA_PRODUCTION(REGF, loadConF_rule, 125)
   }
   if ( /* STACKSLOTF KNOWN_VALID || */ _cost[STACKSLOTF] > 125+95) {
     DFA_PRODUCTION(STACKSLOTF, storeSSF_rule, 125+95)
   }
}
void  State::_sub_Op_ConI(const Node *n){
    int _n_get_int__ = n->get_int();
    if(         
#line 3081 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_int__ == 65535
#line 4835 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_65535, immI_65535_rule, c)
    }
    if(         
#line 3071 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_int__ == 255
#line 4843 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_255, immI_255_rule, c)
    }
    if(         
#line 3061 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_int__ == 24
#line 4851 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_24, immI_24_rule, c)
    }
    if(         
#line 3052 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_int__ == 16
#line 4859 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_16, immI_16_rule, c)
    }
    if(         
#line 2830 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
 _n_get_int__ == 64 
#line 4867 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_64, immI_64_rule, c)
    }
    if(         
#line 2819 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
 _n_get_int__ == 32 
#line 4875 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_32, immI_32_rule, c)
    }
    if(         
#line 2808 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_int__ >= 0
#line 4883 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMU31, immU31_rule, c)
    }
    if(         
#line 2797 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
(-32768 <= _n_get_int__) && (_n_get_int__ <= 32767)
#line 4891 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMMI16, immI16_rule, c)
    }
    if(         
#line 2787 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
(-0x80 <= _n_get_int__) && (_n_get_int__ < 0x80)
#line 4899 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMI8, immI8_rule, c)
    }
    if(         
#line 2778 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
0 <= _n_get_int__ && (_n_get_int__ <= 3)
#line 4907 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI2, immI2_rule, c)
    }
    if(         
#line 2767 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_int__ == -1
#line 4915 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_M1, immI_M1_rule, c)
    }
    if(         
#line 2756 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_int__ == 1
#line 4923 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI1, immI1_rule, c)
    }
    if(         
#line 2745 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_int__ == 0
#line 4931 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI0, immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+50+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadConI0_rule, c+50)
    }
    {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMMI, immI_rule, c)
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(RREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadConI_rule, c+100)
      }
    }
   if ( /* RREGI KNOWN_VALID || */ _cost[RREGI] > 100) {
     DFA_PRODUCTION(RREGI, loadConI_rule, 100)
   }
   if ( /* STACKSLOTI KNOWN_VALID || */ _cost[STACKSLOTI] > 100+100) {
     DFA_PRODUCTION(STACKSLOTI, storeSSI_rule, 100+100)
   }
   if ( /* RAX_REGI KNOWN_VALID || */ _cost[RAX_REGI] > 100) {
     DFA_PRODUCTION(RAX_REGI, loadConI_rule, 100)
   }
   if ( /* NO_RCX_REGI KNOWN_VALID || */ _cost[NO_RCX_REGI] > 100) {
     DFA_PRODUCTION(NO_RCX_REGI, loadConI_rule, 100)
   }
   if ( /* RBX_REGI KNOWN_VALID || */ _cost[RBX_REGI] > 100) {
     DFA_PRODUCTION(RBX_REGI, loadConI_rule, 100)
   }
   if ( /* NO_RAX_RDX_REGI KNOWN_VALID || */ _cost[NO_RAX_RDX_REGI] > 100) {
     DFA_PRODUCTION(NO_RAX_RDX_REGI, loadConI_rule, 100)
   }
   if ( /* RCX_REGI KNOWN_VALID || */ _cost[RCX_REGI] > 100) {
     DFA_PRODUCTION(RCX_REGI, loadConI_rule, 100)
   }
   if ( /* RDX_REGI KNOWN_VALID || */ _cost[RDX_REGI] > 100) {
     DFA_PRODUCTION(RDX_REGI, loadConI_rule, 100)
   }
   if ( /* RDI_REGI KNOWN_VALID || */ _cost[RDI_REGI] > 100) {
     DFA_PRODUCTION(RDI_REGI, loadConI_rule, 100)
   }
}
void  State::_sub_Op_ConL(const Node *n){
    jlong _n_get_long__ = n->get_long();
    if(         
#line 3101 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_long__ == 65535
#line 5009 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMML_65535, immL_65535_rule, c)
    }
    if(         
#line 3091 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_long__ == 255
#line 5017 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMML_255, immL_255_rule, c)
    }
    if(         
#line 2997 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_long__ == 0xFFFFFFFFL
#line 5025 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 20;
        DFA_PRODUCTION__SET_VALID(IMML_32BITS, immL_32bits_rule, c)
    }
    if(         
#line 2986 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
0 <= _n_get_long__ && _n_get_long__ < 0x80
#line 5033 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMML_127, immL_127_rule, c)
    }
    if(         
#line 2975 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_long__ == 10
#line 5041 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMML10, immL10_rule, c)
    }
    if(         
#line 2965 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_long__ == -1
#line 5049 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMML_M1, immL_M1_rule, c)
    }
    if(         
#line 2955 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_long__ == 1
#line 5057 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMML1, immL1_rule, c)
    }
    if(         
#line 2944 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_long__ == 0L
#line 5065 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMML0, immL0_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGL, loadConL0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+50+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadConL0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadConL0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadConL0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadConL0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadConL0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadConL0_rule, c+50)
    }
    if(         
#line 2933 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_long__ == (int) (_n_get_long__)
#line 5081 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 15;
        DFA_PRODUCTION__SET_VALID(IMML32, immL32_rule, c)
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c+70) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadConL32_rule, c+70)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+70+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+70+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c+70) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadConL32_rule, c+70)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c+70) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadConL32_rule, c+70)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c+70) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadConL32_rule, c+70)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c+70) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadConL32_rule, c+70)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c+70) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadConL32_rule, c+70)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c+70) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadConL32_rule, c+70)
      }
    }
    if(         
#line 2922 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
_n_get_long__ == (unsigned int) (_n_get_long__)
#line 5113 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMMUL32, immUL32_rule, c)
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c+60) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadConUL32_rule, c+60)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+60+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+60+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c+60) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadConUL32_rule, c+60)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c+60) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadConUL32_rule, c+60)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c+60) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadConUL32_rule, c+60)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c+60) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadConUL32_rule, c+60)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c+60) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadConUL32_rule, c+60)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c+60) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadConUL32_rule, c+60)
      }
    }
    if(         
#line 2911 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
-0x80L <= _n_get_long__ && _n_get_long__ < 0x80L
#line 5145 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMML8, immL8_rule, c)
    }
    {
      unsigned int c = 20;
        DFA_PRODUCTION__SET_VALID(IMML, immL_rule, c)
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c+150) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadConL_rule, c+150)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+150+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+150+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c+150) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadConL_rule, c+150)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c+150) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadConL_rule, c+150)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c+150) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadConL_rule, c+150)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c+150) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadConL_rule, c+150)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c+150) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadConL_rule, c+150)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c+150) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadConL_rule, c+150)
      }
    }
   if ( /* RREGL KNOWN_VALID || */ _cost[RREGL] > 150) {
     DFA_PRODUCTION(RREGL, loadConL_rule, 150)
   }
   if ( /* STACKSLOTL KNOWN_VALID || */ _cost[STACKSLOTL] > 150+100) {
     DFA_PRODUCTION(STACKSLOTL, storeSSL_rule, 150+100)
   }
   if ( /* NO_RAX_RDX_REGL KNOWN_VALID || */ _cost[NO_RAX_RDX_REGL] > 150) {
     DFA_PRODUCTION(NO_RAX_RDX_REGL, loadConL_rule, 150)
   }
   if ( /* NO_RAX_REGL KNOWN_VALID || */ _cost[NO_RAX_REGL] > 150) {
     DFA_PRODUCTION(NO_RAX_REGL, loadConL_rule, 150)
   }
   if ( /* NO_RCX_REGL KNOWN_VALID || */ _cost[NO_RCX_REGL] > 150) {
     DFA_PRODUCTION(NO_RCX_REGL, loadConL_rule, 150)
   }
   if ( /* RAX_REGL KNOWN_VALID || */ _cost[RAX_REGL] > 150) {
     DFA_PRODUCTION(RAX_REGL, loadConL_rule, 150)
   }
   if ( /* RCX_REGL KNOWN_VALID || */ _cost[RCX_REGL] > 150) {
     DFA_PRODUCTION(RCX_REGL, loadConL_rule, 150)
   }
   if ( /* RDX_REGL KNOWN_VALID || */ _cost[RDX_REGL] > 150) {
     DFA_PRODUCTION(RDX_REGL, loadConL_rule, 150)
   }
}
void  State::_sub_Op_ConP(const Node *n){
    if(         
#line 2888 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->as_Type()->type()->reloc() == relocInfo::none
            && (n->get_ptr() >> 31) == 0
#line 5208 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMP31, immP31_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+60+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+60)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, loadConP31_rule, c+60)
        DFA_PRODUCTION__SET_VALID(R15_REGP, loadConP31_rule, c+60)
    }
    if(         
#line 2851 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->get_ptr() == 0
#line 5230 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMP0, immP0_rule, c)
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(RREGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+50+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+50+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+50) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+50) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, loadConP0_rule, c+50)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+50) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, loadConP0_rule, c+50)
      }
    }
    {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMMP, immP_rule, c)
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(RREGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+100) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, loadConP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, loadConP_rule, c+100)
      }
    }
   if ( /* RREGP KNOWN_VALID || */ _cost[RREGP] > 100) {
     DFA_PRODUCTION(RREGP, loadConP_rule, 100)
   }
   if ( /* STACKSLOTP KNOWN_VALID || */ _cost[STACKSLOTP] > 100+100) {
     DFA_PRODUCTION(STACKSLOTP, storeSSP_rule, 100+100)
   }
   if ( /* ANY_REGP KNOWN_VALID || */ _cost[ANY_REGP] > 100) {
     DFA_PRODUCTION(ANY_REGP, loadConP_rule, 100)
   }
   if ( /* INDIRECT KNOWN_VALID || */ _cost[INDIRECT] > 100) {
     DFA_PRODUCTION(INDIRECT, loadConP_rule, 100)
   }
   if ( /* MEMORY KNOWN_VALID || */ _cost[MEMORY] > 100) {
     DFA_PRODUCTION(MEMORY, indirect_rule, 100)
   }
   if ( /* RAX_REGP KNOWN_VALID || */ _cost[RAX_REGP] > 100) {
     DFA_PRODUCTION(RAX_REGP, loadConP_rule, 100)
   }
   if ( /* RBX_REGP KNOWN_VALID || */ _cost[RBX_REGP] > 100) {
     DFA_PRODUCTION(RBX_REGP, loadConP_rule, 100)
   }
   if ( /* NO_RAX_REGP KNOWN_VALID || */ _cost[NO_RAX_REGP] > 100) {
     DFA_PRODUCTION(NO_RAX_REGP, loadConP_rule, 100)
   }
   if ( /* NO_RBP_REGP KNOWN_VALID || */ _cost[NO_RBP_REGP] > 100) {
     DFA_PRODUCTION(NO_RBP_REGP, loadConP_rule, 100)
   }
   if ( /* RSI_REGP KNOWN_VALID || */ _cost[RSI_REGP] > 100) {
     DFA_PRODUCTION(RSI_REGP, loadConP_rule, 100)
   }
   if ( /* NO_RAX_RBX_REGP KNOWN_VALID || */ _cost[NO_RAX_RBX_REGP] > 100) {
     DFA_PRODUCTION(NO_RAX_RBX_REGP, loadConP_rule, 100)
   }
   if ( /* RDI_REGP KNOWN_VALID || */ _cost[RDI_REGP] > 100) {
     DFA_PRODUCTION(RDI_REGP, loadConP_rule, 100)
   }
   if ( /* RBP_REGP KNOWN_VALID || */ _cost[RBP_REGP] > 100) {
     DFA_PRODUCTION(RBP_REGP, loadConP_rule, 100)
   }
   if ( /* R15_REGP KNOWN_VALID || */ _cost[R15_REGP] > 100) {
     DFA_PRODUCTION(R15_REGP, loadConP_rule, 100)
   }
}
void  State::_sub_Op_Conv2B(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGP) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, convP2B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, convI2B_rule, c)
      }
    }
}
void  State::_sub_Op_ConvD2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _SQRTD__CONVF2D_IMMF__) &&
        (
#line 1694 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseSSE>=1
#line 5415 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_SQRTD__CONVF2D_IMMF__]+150;
        DFA_PRODUCTION__SET_VALID(REGF, sqrtF_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _SQRTD__CONVF2D__LOADF_MEMORY___) &&
        (
#line 1682 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseSSE>=1
#line 5425 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_SQRTD__CONVF2D__LOADF_MEMORY___]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, sqrtF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SQRTD__CONVF2D_REGF__) &&
        (
#line 1670 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseSSE>=1
#line 5439 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_SQRTD__CONVF2D_REGF__]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, sqrtF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, convD2F_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, convD2F_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_ConvD2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, convD2I_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvD2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, convD2L_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvF2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMF) ) {
      unsigned int c = _kids[0]->_cost[IMMF];
        DFA_PRODUCTION__SET_VALID(_CONVF2D_IMMF_, _ConvF2D_immF__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_CONVF2D__LOADF_MEMORY__, _ConvF2D__LoadF_memory___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF];
        DFA_PRODUCTION__SET_VALID(_CONVF2D_REGF_, _ConvF2D_regF__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGD, convF2D_reg_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, convF2D_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_ConvF2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, convF2I_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvF2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, convF2L_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvI2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 9952 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseXmmI2D
#line 5555 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(REGD, convXI2D_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, convI2D_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 9915 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseXmmI2D
#line 5574 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, convI2D_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_ConvI2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 9938 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseXmmI2F
#line 5590 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(REGF, convXI2F_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, convI2F_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 9892 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseXmmI2F
#line 5609 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, convI2F_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_ConvI2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+125;
        DFA_PRODUCTION__SET_VALID(RREGL, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, convI2L_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_RREGI_IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_RREGI_IMMI_65535]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andI2L_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andI2L_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andI2L_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andI2L_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andI2L_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andI2L_rReg_imm65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andI2L_rReg_imm65535_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_RREGI_IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_RREGI_IMMI_255]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, andI2L_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, andI2L_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, andI2L_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, andI2L_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, andI2L_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, andI2L_rReg_imm255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, andI2L_rReg_imm255_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_CONVI2L__LOADI_MEMORY__, _ConvI2L__LoadI_memory___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADI_MEMORY__IMMU31) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADI_MEMORY__IMMU31]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadI2L_immU31_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadI2L_immU31_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadI2L_immU31_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadI2L_immU31_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadI2L_immU31_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadI2L_immU31_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadI2L_immU31_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADI_MEMORY__IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADI_MEMORY__IMMI_65535]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadI2L_immI_65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadI2L_immI_65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadI2L_immI_65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadI2L_immI_65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadI2L_immI_65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadI2L_immI_65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadI2L_immI_65535_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADI_MEMORY__IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADI_MEMORY__IMMI_255]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadI2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadI2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadI2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadI2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadI2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadI2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadI2L_immI_255_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadI2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADUS_MEMORY__IMMI16) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADUS_MEMORY__IMMI16]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadUS2L_immI16_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadUS2L_immI16_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadUS2L_immI16_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadUS2L_immI16_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadUS2L_immI16_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadUS2L_immI16_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadUS2L_immI16_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADUS_MEMORY__IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADUS_MEMORY__IMMI_255]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadUS2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadUS2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadUS2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadUS2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadUS2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadUS2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadUS2L_immI_255_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadUS2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADS_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADS_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadS2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADUB_MEMORY__IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADUB_MEMORY__IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadUB2L_immI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadUB2L_immI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadUB2L_immI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadUB2L_immI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadUB2L_immI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadUB2L_immI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadUB2L_immI8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUB_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADUB_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadUB2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADB_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADB_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadB2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_CONVI2L_RREGI_, _ConvI2L_rRegI__rule, c)
    }
}
void  State::_sub_Op_ConvL2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGD, convL2D_reg_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, convL2D_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_ConvL2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGF, convL2F_reg_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, convL2F_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_ConvL2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, convL2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, convL2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, convL2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, convL2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, convL2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, convL2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, convL2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, convL2I_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CASTP2X__DECODEN_RREGN__) &&
        (
#line 6221 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_shift() == 0
#line 6041 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_CASTP2X__DECODEN_RREGN__]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, convN2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CASTP2X_RREGP_) ) {
      unsigned int c = _kids[0]->_cost[_CASTP2X_RREGP_]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, convP2I_rule, c)
      }
    }
}
void  State::_sub_Op_CosD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(REGD, cosD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
}
void  State::_sub_Op_CountedLoopEnd(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], CMPOPUCF) && STATE__VALID_CHILD(_kids[1], RFLAGSREGUCF) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUCF]+_kids[1]->_cost[RFLAGSREGUCF]+200;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpLoopEndUCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPU) && STATE__VALID_CHILD(_kids[1], RFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOPU]+_kids[1]->_cost[RFLAGSREGU]+300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpLoopEndU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], RFLAGSREG) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[RFLAGSREG]+300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpLoopEnd_rule, c)
      }
    }
}
void  State::_sub_Op_CountLeadingZerosI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 5908 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseCountLeadingZerosInstruction
#line 6133 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, countLeadingZerosI_bsr_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 5896 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCountLeadingZerosInstruction
#line 6150 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, countLeadingZerosI_rule, c)
      }
    }
}
void  State::_sub_Op_CountLeadingZerosL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) &&
        (
#line 5945 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseCountLeadingZerosInstruction
#line 6187 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, countLeadingZerosL_bsr_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) &&
        (
#line 5933 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCountLeadingZerosInstruction
#line 6204 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, countLeadingZerosL_rule, c)
      }
    }
}
void  State::_sub_Op_CountTrailingZerosI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 5982 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseCountTrailingZerosInstruction
#line 6241 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, countTrailingZerosI_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, countTrailingZerosI_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, countTrailingZerosI_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, countTrailingZerosI_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, countTrailingZerosI_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, countTrailingZerosI_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, countTrailingZerosI_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, countTrailingZerosI_bsf_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 5970 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCountTrailingZerosInstruction
#line 6258 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, countTrailingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, countTrailingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, countTrailingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, countTrailingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, countTrailingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, countTrailingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, countTrailingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, countTrailingZerosI_rule, c)
      }
    }
}
void  State::_sub_Op_CountTrailingZerosL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) &&
        (
#line 6014 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseCountTrailingZerosInstruction
#line 6295 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, countTrailingZerosL_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, countTrailingZerosL_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, countTrailingZerosL_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, countTrailingZerosL_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, countTrailingZerosL_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, countTrailingZerosL_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, countTrailingZerosL_bsf_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, countTrailingZerosL_bsf_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) &&
        (
#line 6002 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCountTrailingZerosInstruction
#line 6312 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, countTrailingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, countTrailingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, countTrailingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, countTrailingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, countTrailingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, countTrailingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, countTrailingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, countTrailingZerosL_rule, c)
      }
    }
}
void  State::_sub_Op_CreateEx(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(RAX_REGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, CreateException_rule, c)
    }
}
void  State::_sub_Op_DecodeN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGN) &&
        (
#line 6277 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->bottom_type()->is_ptr()->ptr() == TypePtr::NotNull ||
            n->bottom_type()->is_ptr()->ptr() == TypePtr::Constant
#line 6369 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGN]+100;
        DFA_PRODUCTION__SET_VALID(RREGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, decodeHeapOop_not_null_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGN) &&
        (
#line 6260 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->bottom_type()->is_ptr()->ptr() != TypePtr::NotNull &&
            n->bottom_type()->is_ptr()->ptr() != TypePtr::Constant
#line 6392 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGN]+100;
      if (STATE__NOT_YET_VALID(RREGP) || _cost[RREGP] > c) {
        DFA_PRODUCTION__SET_VALID(RREGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANY_REGP) || _cost[ANY_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANY_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGP) || _cost[RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGP) || _cost[RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGP) || _cost[NO_RAX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RBP_REGP) || _cost[NO_RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(RSI_REGP) || _cost[RSI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RSI_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RBX_REGP) || _cost[NO_RAX_RBX_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGP) || _cost[RDI_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBP_REGP) || _cost[RBP_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(RBP_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(R15_REGP) || _cost[R15_REGP] > c) {
        DFA_PRODUCTION__SET_VALID(R15_REGP, decodeHeapOop_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGN) &&
        
#line 3645 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_shift() == 0
#line 6442 "../generated/adfiles/dfa_x86_64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[RREGN];
        DFA_PRODUCTION__SET_VALID(INDIRECTNARROW, indirectNarrow_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirectNarrow_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGN) ) {
      unsigned int c = _kids[0]->_cost[RREGN];
        DFA_PRODUCTION__SET_VALID(_DECODEN_RREGN_, _DecodeN_rRegN__rule, c)
    }
}
void  State::_sub_Op_DecodeNKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGN) ) {
      unsigned int c = _kids[0]->_cost[RREGN]+100;
        DFA_PRODUCTION__SET_VALID(RREGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, decodeKlass_not_null_rule, c)
    }
}
void  State::_sub_Op_DivD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 1558 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 6479 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+150;
        DFA_PRODUCTION__SET_VALID(REGD, divD_reg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 1546 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 6489 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, divD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1534 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 6503 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, divD_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 1523 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 6517 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, divD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 1511 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 6531 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, divD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1499 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 6545 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, divD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_DivF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 1487 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 6561 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+150;
        DFA_PRODUCTION__SET_VALID(REGF, divF_reg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 1475 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 6571 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, divF_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1463 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 6585 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, divF_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 1452 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 6599 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, divF_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 1440 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 6613 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, divF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1428 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 6627 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, divF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_DivI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RAX_REGI) && STATE__VALID_CHILD(_kids[1], NO_RAX_RDX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGI]+_kids[1]->_cost[NO_RAX_RDX_REGI]+30*100+10*100;
        DFA_PRODUCTION__SET_VALID(RAX_REGI, divI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGI, divI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, divI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, divI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, divI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, divI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, divI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, divI_rReg_rule, c)
    }
}
void  State::_sub_Op_DivL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NO_RAX_REGL) && STATE__VALID_CHILD(_kids[1], IMML10) ) {
      unsigned int c = _kids[0]->_cost[NO_RAX_REGL]+_kids[1]->_cost[IMML10]+(5+8)*100;
        DFA_PRODUCTION__SET_VALID(RDX_REGL, divL_10_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGL, divL_10_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, divL_10_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, divL_10_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, divL_10_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, divL_10_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, divL_10_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RAX_REGL) && STATE__VALID_CHILD(_kids[1], NO_RAX_RDX_REGL) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGL]+_kids[1]->_cost[NO_RAX_RDX_REGL]+30*100+10*100;
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, divL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, divL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, divL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, divL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, divL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, divL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, divL_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_DivModI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RAX_REGI) && STATE__VALID_CHILD(_kids[1], NO_RAX_RDX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGI]+_kids[1]->_cost[NO_RAX_RDX_REGI]+30*100+10*100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, divModI_rReg_divmod_rule, c)
    }
}
void  State::_sub_Op_DivModL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RAX_REGL) && STATE__VALID_CHILD(_kids[1], NO_RAX_RDX_REGL) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGL]+_kids[1]->_cost[NO_RAX_RDX_REGL]+30*100+10*100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, divModL_rReg_divmod_rule, c)
    }
}
void  State::_sub_Op_EncodeISOArray(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RSI_REGP) && STATE__VALID_CHILD(_kids[1], _BINARY_RDI_REGP_RDX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RSI_REGP]+_kids[1]->_cost[_BINARY_RDI_REGP_RDX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RAX_REGI, encode_iso_array_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGI, encode_iso_array_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, encode_iso_array_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, encode_iso_array_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, encode_iso_array_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, encode_iso_array_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, encode_iso_array_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, encode_iso_array_rule, c)
    }
}
void  State::_sub_Op_EncodeP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGP) &&
        (
#line 6249 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->bottom_type()->make_ptr()->ptr() == TypePtr::NotNull
#line 6723 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+100;
        DFA_PRODUCTION__SET_VALID(RREGN, encodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGN, encodeHeapOop_not_null_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) &&
        (
#line 6233 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
n->bottom_type()->make_ptr()->ptr() != TypePtr::NotNull
#line 6733 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+100;
      if (STATE__NOT_YET_VALID(RREGN) || _cost[RREGN] > c) {
        DFA_PRODUCTION__SET_VALID(RREGN, encodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGN) || _cost[RAX_REGN] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGN, encodeHeapOop_rule, c)
      }
    }
}
void  State::_sub_Op_EncodePKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGP) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+100;
        DFA_PRODUCTION__SET_VALID(RREGN, encodeKlass_not_null_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGN, encodeKlass_not_null_rule, c)
    }
}
void  State::_sub_Op_ExpD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(REGD, expD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
}
void  State::_sub_Op_FastLock(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], RBX_REGP) &&
        (
#line 11352 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!Compile::current()->use_rtm()
#line 6763 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[RBX_REGP]+300;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, cmpFastLock_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], RBX_REGP) &&
        (
#line 11336 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Compile::current()->use_rtm()
#line 6772 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[RBX_REGP]+300;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, cmpFastLockRTM_rule, c)
      }
    }
}
void  State::_sub_Op_FastUnlock(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGP) && STATE__VALID_CHILD(_kids[1], RAX_REGP) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+_kids[1]->_cost[RAX_REGP]+300;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, cmpFastUnlock_rule, c)
    }
}
void  State::_sub_Op_Goto(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpDir_rule, c)
    }
}
void  State::_sub_Op_Halt(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, ShouldNotReachHere_rule, c)
    }
}
void  State::_sub_Op_If(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], CMPOPUCF2) && STATE__VALID_CHILD(_kids[1], RFLAGSREGUCF) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUCF2]+_kids[1]->_cost[RFLAGSREGUCF]+200;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpConUCF2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPUCF) && STATE__VALID_CHILD(_kids[1], RFLAGSREGUCF) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUCF]+_kids[1]->_cost[RFLAGSREGUCF]+200;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpConUCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPU) && STATE__VALID_CHILD(_kids[1], RFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOPU]+_kids[1]->_cost[RFLAGSREGU]+300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpConU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], RFLAGSREG) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[RFLAGSREG]+300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpCon_rule, c)
      }
    }
}
void  State::_sub_Op_Jump(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+350;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jumpXtnd_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDL__LSHIFTL_RREGL_IMMI2_IMML32) ) {
      unsigned int c = _kids[0]->_cost[_ADDL__LSHIFTL_RREGL_IMMI2_IMML32]+350;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jumpXtnd_addr_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_RREGL_IMMI2) &&
        (
#line 6327 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
false
#line 6837 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_RREGL_IMMI2]+350;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jumpXtnd_offset_rule, c)
      }
    }
}
void  State::_sub_Op_LShiftI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI_32_RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGI]+_kids[1]->_cost[_SUBI_IMMI_32_RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI, _LShiftI_no_rcx_RegI__SubI_immI_32_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGI]+_kids[1]->_cost[_SUBI_IMMI0_RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI, _LShiftI_no_rcx_RegI__SubI_immI0_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_RREGI_IMMI_M1, _LShiftI_rRegI_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGI) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGI]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_NO_RCX_REGI_RCX_REGI, _LShiftI_no_rcx_RegI_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_RREGI_IMMI8, _LShiftI_rRegI_immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_RREGI_IMMI1, _LShiftI_rRegI_immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_16) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_16];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_RREGI_IMMI_16, _LShiftI_rRegI_immI_16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_RREGI_IMMI_24, _LShiftI_rRegI_immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADI_MEMORY__RCX_REGI, _LShiftI__LoadI_memory__rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RCX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, salI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, salI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, salI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, salI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, salI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, salI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, salI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, salI_rReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADI_MEMORY__IMMI8, _LShiftI__LoadI_memory__immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, salI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, salI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, salI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, salI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, salI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, salI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, salI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, salI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADI_MEMORY__IMMI1, _LShiftI__LoadI_memory__immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, salI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, salI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, salI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, salI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, salI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, salI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, salI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, salI_rReg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_16) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_16];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADI_MEMORY__IMMI_16, _LShiftI__LoadI_memory__immI_16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADI_MEMORY__IMMI_24, _LShiftI__LoadI_memory__immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_MEMORY_]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADUS_MEMORY__IMMI_24, _LShiftI__LoadUS_memory__immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADS_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[_LOADS_MEMORY_]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADS_MEMORY__IMMI_24, _LShiftI__LoadS_memory__immI_24_rule, c)
    }
}
void  State::_sub_Op_LShiftL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGL) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI_64_RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGL]+_kids[1]->_cost[_SUBI_IMMI_64_RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI, _LShiftL_no_rcx_RegL__SubI_immI_64_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGL) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGL]+_kids[1]->_cost[_SUBI_IMMI0_RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI, _LShiftL_no_rcx_RegL__SubI_immI0_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL_RREGL_IMMI_M1, _LShiftL_rRegL_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGL) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGL]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL_NO_RCX_REGL_RCX_REGI, _LShiftL_no_rcx_RegL_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL_RREGL_IMMI8, _LShiftL_rRegL_immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL_RREGL_IMMI1, _LShiftL_rRegL_immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL__LOADL_MEMORY__RCX_REGI, _LShiftL__LoadL_memory__rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RCX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, salL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, salL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, salL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, salL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, salL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, salL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, salL_rReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL__LOADL_MEMORY__IMMI8, _LShiftL__LoadL_memory__immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, salL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, salL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, salL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, salL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, salL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, salL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, salL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL__LOADL_MEMORY__IMMI1, _LShiftL__LoadL_memory__immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, salL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, salL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, salL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, salL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, salL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, salL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, salL_rReg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_RREGI_) && STATE__VALID_CHILD(_kids[1], IMMI2) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_RREGI_]+_kids[1]->_cost[IMMI2];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL__CONVI2L_RREGI__IMMI2, _LShiftL__ConvI2L_rRegI__immI2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI2) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI2];
        DFA_PRODUCTION__SET_VALID(_LSHIFTL_RREGL_IMMI2, _LShiftL_rRegL_immI2_rule, c)
    }
}
void  State::_sub_Op_LoadB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADB_MEMORY_, _LoadB_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadB_rule, c)
    }
}
void  State::_sub_Op_LoadUB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADUB_MEMORY_, _LoadUB_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadUB_rule, c)
    }
}
void  State::_sub_Op_LoadUS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADUS_MEMORY_, _LoadUS_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadUS_rule, c)
    }
}
void  State::_sub_Op_LoadD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADD_MEMORY_, _LoadD_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 4909 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseXmmLoadAndClearUpper
#line 7153 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+145;
        DFA_PRODUCTION__SET_VALID(REGD, loadD_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 4896 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseXmmLoadAndClearUpper
#line 7163 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+145;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, loadD_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_LoadF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADF_MEMORY_, _LoadF_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+145;
        DFA_PRODUCTION__SET_VALID(REGF, loadF_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
}
void  State::_sub_Op_LoadI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADI_MEMORY_, _LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadI_rule, c)
    }
}
void  State::_sub_Op_LoadKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, loadKlass_rule, c)
    }
}
void  State::_sub_Op_LoadNKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADNKLASS_MEMORY_, _LoadNKlass_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGN, loadNKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGN, loadNKlass_rule, c)
    }
}
void  State::_sub_Op_LoadL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADL_MEMORY_, _LoadL_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGL, loadL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadL_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadL_rule, c)
    }
}
void  State::_sub_Op_LoadPLocked(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, loadPLocked_rule, c)
    }
}
void  State::_sub_Op_LoadP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADP_MEMORY_, _LoadP_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, loadP_rule, c)
    }
}
void  State::_sub_Op_LoadN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADN_MEMORY_, _LoadN_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGN, loadN_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGN, loadN_rule, c)
    }
}
void  State::_sub_Op_LoadRange(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadRange_rule, c)
    }
}
void  State::_sub_Op_LoadS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADS_MEMORY_, _LoadS_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(RREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadS_rule, c)
    }
}
void  State::_sub_Op_LogD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(REGD, logD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
}
void  State::_sub_Op_Log10D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(REGD, log10D_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
}
void  State::_sub_Op_MaxI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+200;
        DFA_PRODUCTION__SET_VALID(RREGI, maxI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, maxI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, maxI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, maxI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, maxI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, maxI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, maxI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, maxI_rReg_rule, c)
    }
}
void  State::_sub_Op_MemBarAcquire(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_acquire_rule, c)
    }
}
void  State::_sub_Op_LoadFence(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_acquire_0_rule, c)
    }
}
void  State::_sub_Op_MemBarAcquireLock(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_acquire_lock_rule, c)
    }
}
void  State::_sub_Op_MemBarRelease(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_release_rule, c)
    }
}
void  State::_sub_Op_StoreFence(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_release_0_rule, c)
    }
}
void  State::_sub_Op_MemBarReleaseLock(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_release_lock_rule, c)
    }
}
void  State::_sub_Op_MemBarVolatile(const Node *n){
    if(         (
#line 6158 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Matcher::post_store_load_barrier(n)
#line 7403 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, unnecessary_membar_volatile_rule, c)
    }
    {
      unsigned int c = 400;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_volatile_rule, c)
      }
    }
}
void  State::_sub_Op_MemBarStoreStore(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_storestore_rule, c)
    }
}
void  State::_sub_Op_MinI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+200;
        DFA_PRODUCTION__SET_VALID(RREGI, minI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, minI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, minI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, minI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, minI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, minI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, minI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, minI_rReg_rule, c)
    }
}
void  State::_sub_Op_ModI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RAX_REGI) && STATE__VALID_CHILD(_kids[1], NO_RAX_RDX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGI]+_kids[1]->_cost[NO_RAX_RDX_REGI]+300;
        DFA_PRODUCTION__SET_VALID(RDX_REGI, modI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGI, modI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, modI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, modI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, modI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, modI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, modI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, modI_rReg_rule, c)
    }
}
void  State::_sub_Op_ModL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RAX_REGL) && STATE__VALID_CHILD(_kids[1], NO_RAX_RDX_REGL) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGL]+_kids[1]->_cost[NO_RAX_RDX_REGL]+300;
        DFA_PRODUCTION__SET_VALID(RDX_REGL, modL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGL, modL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, modL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, modL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, modL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, modL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, modL_rReg_rule, c)
    }
}
void  State::_sub_Op_MoveI2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(REGF, MoveI2F_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, MoveI2F_reg_stack_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTI) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTI]+125;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, MoveI2F_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_MoveF2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+85;
        DFA_PRODUCTION__SET_VALID(RREGI, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, MoveF2I_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+95;
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, MoveF2I_reg_stack_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(RREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadSSI_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTF) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTF]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, MoveF2I_stack_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MoveL2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
        DFA_PRODUCTION__SET_VALID(REGD, MoveL2D_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, MoveL2D_reg_stack_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGD, loadSSD_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTL) &&
        (
#line 10136 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseXmmLoadAndClearUpper
#line 7580 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTL]+125;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, MoveL2D_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTL) &&
        (
#line 10123 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseXmmLoadAndClearUpper
#line 7594 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTL]+125;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, MoveL2D_stack_reg_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_MoveD2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+85;
        DFA_PRODUCTION__SET_VALID(RREGL, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, MoveD2L_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+95;
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, MoveD2L_reg_stack_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c+125) {
        DFA_PRODUCTION__SET_VALID(RREGL, loadSSL_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c+125) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, loadSSL_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c+125) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, loadSSL_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c+125) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, loadSSL_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c+125) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, loadSSL_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c+125) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, loadSSL_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c+125) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, loadSSL_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTD) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTD]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, MoveD2L_stack_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MulD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 1416 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 7677 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+150;
        DFA_PRODUCTION__SET_VALID(REGD, mulD_reg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1404 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 7687 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 1404 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 7701 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1392 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 7715 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 1381 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 7729 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1369 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 7743 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 1369 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 7757 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1357 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 7771 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_MulF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 1345 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 7787 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+150;
        DFA_PRODUCTION__SET_VALID(REGF, mulF_reg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1333 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 7797 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 1333 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 7811 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1321 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 7825 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 1310 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 7839 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1298 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 7853 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 1298 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 7867 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1286 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 7881 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_MulHiL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NO_RAX_REGL) && STATE__VALID_CHILD(_kids[1], RAX_REGL) ) {
      unsigned int c = _kids[0]->_cost[NO_RAX_REGL]+_kids[1]->_cost[RAX_REGL]+300;
        DFA_PRODUCTION__SET_VALID(RDX_REGL, mulHiL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGL, mulHiL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, mulHiL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, mulHiL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, mulHiL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, mulHiL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, mulHiL_rReg_rule, c)
    }
}
void  State::_sub_Op_MulI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI]+300;
        DFA_PRODUCTION__SET_VALID(RREGI, mulI_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, mulI_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, mulI_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, mulI_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, mulI_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, mulI_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, mulI_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, mulI_mem_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI]+350;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, mulI_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, mulI_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, mulI_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, mulI_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, mulI_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, mulI_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, mulI_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, mulI_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+350;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, mulI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, mulI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, mulI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, mulI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, mulI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, mulI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, mulI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, mulI_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+300;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, mulI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, mulI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, mulI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, mulI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, mulI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, mulI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, mulI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, mulI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+300;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, mulI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, mulI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, mulI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, mulI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, mulI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, mulI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, mulI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, mulI_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_MulL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMML32]+300;
        DFA_PRODUCTION__SET_VALID(RREGL, mulL_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, mulL_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, mulL_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, mulL_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, mulL_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, mulL_mem_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, mulL_mem_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL]+350;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, mulL_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, mulL_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, mulL_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, mulL_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, mulL_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, mulL_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, mulL_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_]+350;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, mulL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, mulL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, mulL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, mulL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, mulL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, mulL_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, mulL_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML32]+300;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, mulL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, mulL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, mulL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, mulL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, mulL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, mulL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, mulL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL]+300;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, mulL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, mulL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, mulL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, mulL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, mulL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, mulL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, mulL_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_NegD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 1656 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 8165 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+150;
        DFA_PRODUCTION__SET_VALID(REGD, negD_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 1644 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 8175 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, negD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_NegF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 1631 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 8191 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+150;
        DFA_PRODUCTION__SET_VALID(REGF, negF_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 1620 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 8201 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, negF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_OrI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_ORI__LOADI_MEMORY__IMMI, _OrI__LoadI_memory__immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ORI_RREGI__LOADI_MEMORY_, _OrI_rRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_ORI__LOADI_MEMORY__RREGI, _OrI__LoadI_memory__rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI]+125;
        DFA_PRODUCTION__SET_VALID(RREGI, orI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, orI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, orI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, orI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, orI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, orI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, orI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, orI_rReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, orI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, orI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, orI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, orI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, orI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, orI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, orI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, orI_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, orI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, orI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, orI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, orI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, orI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, orI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, orI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, orI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, orI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, orI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, orI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, orI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, orI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, orI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, orI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, orI_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_NO_RCX_REGI_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI]+_kids[1]->_cost[_URSHIFTI_NO_RCX_REGI_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rorI_rReg_Var_C32_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_NO_RCX_REGI_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_NO_RCX_REGI_RCX_REGI]+_kids[1]->_cost[_LSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rorI_rReg_Var_C32_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_NO_RCX_REGI_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI]+_kids[1]->_cost[_URSHIFTI_NO_RCX_REGI_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rorI_rReg_Var_C0_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_NO_RCX_REGI_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_NO_RCX_REGI_RCX_REGI]+_kids[1]->_cost[_LSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rorI_rReg_Var_C0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_RREGI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_RREGI_IMMI1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_RREGI_IMMI_M1]+_kids[1]->_cost[_URSHIFTI_RREGI_IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, rorI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, rorI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rorI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, rorI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, rorI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, rorI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, rorI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, rorI_rReg_i1_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_RREGI_IMMI1) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_RREGI_IMMI_M1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_RREGI_IMMI1]+_kids[1]->_cost[_LSHIFTI_RREGI_IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, rorI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, rorI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rorI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, rorI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, rorI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, rorI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, rorI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, rorI_rReg_i1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_NO_RCX_REGI_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI]+_kids[1]->_cost[_LSHIFTI_NO_RCX_REGI_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rolI_rReg_Var_C32_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_NO_RCX_REGI_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_NO_RCX_REGI_RCX_REGI]+_kids[1]->_cost[_URSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rolI_rReg_Var_C32_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_NO_RCX_REGI_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI]+_kids[1]->_cost[_LSHIFTI_NO_RCX_REGI_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rolI_rReg_Var_C0_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_NO_RCX_REGI_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_NO_RCX_REGI_RCX_REGI]+_kids[1]->_cost[_URSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rolI_rReg_Var_C0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_RREGI_IMMI8) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_RREGI_IMMI8) &&
        (
#line 8237 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
0 == ((n->in(1)->in(2)->get_int() + n->in(2)->in(2)->get_int()) & 0x1f)
#line 8449 "../generated/adfiles/dfa_x86_64.cpp"
) && /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_RREGI_IMMI8]+_kids[1]->_cost[_LSHIFTI_RREGI_IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, rolI_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, rolI_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rolI_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, rolI_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, rolI_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, rolI_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, rolI_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, rolI_rReg_i8_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_RREGI_IMMI8) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_RREGI_IMMI8) &&
        (
#line 8237 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
0 == ((n->in(1)->in(2)->get_int() + n->in(2)->in(2)->get_int()) & 0x1f)
#line 8484 "../generated/adfiles/dfa_x86_64.cpp"
) && /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_RREGI_IMMI8]+_kids[1]->_cost[_URSHIFTI_RREGI_IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, rolI_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, rolI_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rolI_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, rolI_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, rolI_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, rolI_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, rolI_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, rolI_rReg_i8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_RREGI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_RREGI_IMMI1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_RREGI_IMMI_M1]+_kids[1]->_cost[_LSHIFTI_RREGI_IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, rolI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, rolI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rolI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, rolI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, rolI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, rolI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, rolI_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, rolI_rReg_i1_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_RREGI_IMMI1) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_RREGI_IMMI_M1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_RREGI_IMMI1]+_kids[1]->_cost[_URSHIFTI_RREGI_IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, rolI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, rolI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, rolI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, rolI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, rolI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, rolI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, rolI_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, rolI_rReg_i1_rule, c)
      }
    }
}
void  State::_sub_Op_OrL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMML32];
        DFA_PRODUCTION__SET_VALID(_ORL__LOADL_MEMORY__IMML32, _OrL__LoadL_memory__immL32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ORL_RREGL__LOADL_MEMORY_, _OrL_rRegL__LoadL_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_ORL__LOADL_MEMORY__RREGL, _OrL__LoadL_memory__rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL]+125;
        DFA_PRODUCTION__SET_VALID(RREGL, orL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, orL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, orL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, orL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, orL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, orL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, orL_rReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, orL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, orL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, orL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, orL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, orL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, orL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, orL_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML32]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, orL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, orL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, orL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, orL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, orL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, orL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, orL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CASTP2X_ANY_REGP_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_CASTP2X_ANY_REGP_]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, orL_rReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, orL_rReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, orL_rReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, orL_rReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, orL_rReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, orL_rReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, orL_rReg_castP2X_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _CASTP2X_ANY_REGP_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_CASTP2X_ANY_REGP_]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, orL_rReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, orL_rReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, orL_rReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, orL_rReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, orL_rReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, orL_rReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, orL_rReg_castP2X_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, orL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, orL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, orL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, orL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, orL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, orL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, orL_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_NO_RCX_REGL_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI]+_kids[1]->_cost[_URSHIFTL_NO_RCX_REGL_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rorL_rReg_Var_C64_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_NO_RCX_REGL_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_NO_RCX_REGL_RCX_REGI]+_kids[1]->_cost[_LSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rorL_rReg_Var_C64_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_NO_RCX_REGL_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI]+_kids[1]->_cost[_URSHIFTL_NO_RCX_REGL_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rorL_rReg_Var_C0_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_NO_RCX_REGL_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_NO_RCX_REGL_RCX_REGI]+_kids[1]->_cost[_LSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rorL_rReg_Var_C0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_RREGL_IMMI_M1) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_RREGL_IMMI1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_RREGL_IMMI_M1]+_kids[1]->_cost[_URSHIFTL_RREGL_IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, rorL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, rorL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, rorL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rorL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, rorL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, rorL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, rorL_rReg_i1_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_RREGL_IMMI1) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_RREGL_IMMI_M1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_RREGL_IMMI1]+_kids[1]->_cost[_LSHIFTL_RREGL_IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, rorL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, rorL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, rorL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rorL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, rorL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, rorL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, rorL_rReg_i1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_NO_RCX_REGL_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI]+_kids[1]->_cost[_LSHIFTL_NO_RCX_REGL_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rolL_rReg_Var_C64_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_NO_RCX_REGL_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_NO_RCX_REGL_RCX_REGI]+_kids[1]->_cost[_URSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rolL_rReg_Var_C64_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_NO_RCX_REGL_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI]+_kids[1]->_cost[_LSHIFTL_NO_RCX_REGL_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rolL_rReg_Var_C0_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_NO_RCX_REGL_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_NO_RCX_REGL_RCX_REGI]+_kids[1]->_cost[_URSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rolL_rReg_Var_C0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_RREGL_IMMI8) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_RREGL_IMMI8) &&
        (
#line 8382 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
0 == ((n->in(1)->in(2)->get_int() + n->in(2)->in(2)->get_int()) & 0x3f)
#line 8853 "../generated/adfiles/dfa_x86_64.cpp"
) && /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_RREGL_IMMI8]+_kids[1]->_cost[_LSHIFTL_RREGL_IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, rolL_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, rolL_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, rolL_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rolL_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, rolL_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, rolL_rReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, rolL_rReg_i8_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_RREGL_IMMI8) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_RREGL_IMMI8) &&
        (
#line 8382 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
0 == ((n->in(1)->in(2)->get_int() + n->in(2)->in(2)->get_int()) & 0x3f)
#line 8885 "../generated/adfiles/dfa_x86_64.cpp"
) && /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_RREGL_IMMI8]+_kids[1]->_cost[_URSHIFTL_RREGL_IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, rolL_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, rolL_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, rolL_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rolL_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, rolL_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, rolL_rReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, rolL_rReg_i8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_RREGL_IMMI_M1) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_RREGL_IMMI1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_RREGL_IMMI_M1]+_kids[1]->_cost[_LSHIFTL_RREGL_IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, rolL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, rolL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, rolL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rolL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, rolL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, rolL_rReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, rolL_rReg_i1_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_RREGL_IMMI1) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_RREGL_IMMI_M1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_RREGL_IMMI1]+_kids[1]->_cost[_URSHIFTL_RREGL_IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, rolL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, rolL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, rolL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, rolL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, rolL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, rolL_rReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, rolL_rReg_i1_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowAddI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RAX_REGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGI]+_kids[1]->_cost[IMMI]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowAddI_rReg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RAX_REGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowAddI_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowSubI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], RAX_REGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[RAX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowNegI_rReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowSubI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowSubI_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowMulI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowMulI_rReg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RAX_REGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowMulI_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowAddL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RAX_REGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGL]+_kids[1]->_cost[IMML32]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowAddL_rReg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RAX_REGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowAddL_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowSubL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMML0) && STATE__VALID_CHILD(_kids[1], RAX_REGL) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+_kids[1]->_cost[RAX_REGL]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowNegL_rReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML32]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowSubL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowSubL_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowMulL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML32]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowMulL_rReg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RAX_REGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RAX_REGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, overflowMulL_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_PartialSubtypeCheck(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RSI_REGP) && STATE__VALID_CHILD(_kids[1], RAX_REGP) ) {
      unsigned int c = _kids[0]->_cost[RSI_REGP]+_kids[1]->_cost[RAX_REGP];
        DFA_PRODUCTION__SET_VALID(_PARTIALSUBTYPECHECK_RSI_REGP_RAX_REGP, _PartialSubtypeCheck_rsi_RegP_rax_RegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RSI_REGP) && STATE__VALID_CHILD(_kids[1], RAX_REGP) ) {
      unsigned int c = _kids[0]->_cost[RSI_REGP]+_kids[1]->_cost[RAX_REGP]+1100;
        DFA_PRODUCTION__SET_VALID(RDI_REGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(R15_REGP, partialSubtypeCheck_rule, c)
    }
}
void  State::_sub_Op_PopCountI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) &&
        (
#line 6049 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UsePopCountInstruction
#line 9082 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, popCountI_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 6037 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UsePopCountInstruction
#line 9099 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, popCountI_rule, c)
      }
    }
}
void  State::_sub_Op_PopCountL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) &&
        (
#line 6075 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UsePopCountInstruction
#line 9136 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, popCountL_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) &&
        (
#line 6062 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UsePopCountInstruction
#line 9153 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, popCountL_rule, c)
      }
    }
}
void  State::_sub_Op_PowD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(REGD, powD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
}
void  State::_sub_Op_PrefetchAllocation(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 5423 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
AllocatePrefetchInstr==2
#line 9197 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchAllocT2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 5411 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
AllocatePrefetchInstr==1
#line 9206 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchAllocT0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 5399 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
AllocatePrefetchInstr==0
#line 9217 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchAllocNTA_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 5387 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
AllocatePrefetchInstr==3
#line 9228 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchAlloc_rule, c)
      }
    }
}
void  State::_sub_Op_PrefetchRead(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 5362 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
ReadPrefetchInstr==2
#line 9241 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchrT2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 5350 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
ReadPrefetchInstr==1
#line 9250 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchrT0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 5338 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
ReadPrefetchInstr==0
#line 9261 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchrNTA_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 5326 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
ReadPrefetchInstr==3
#line 9272 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchr_rule, c)
      }
    }
}
void  State::_sub_Op_PrefetchWrite(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchwNTA_rule, c)
    }
}
void  State::_sub_Op_RShiftI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_RREGI_IMMI_16) && STATE__VALID_CHILD(_kids[1], IMMI_16) &&
        /*sixteen*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_RREGI_IMMI_16]+_kids[1]->_cost[IMMI_16]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, i2s_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_RREGI_IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) &&
        /*twentyfour*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_RREGI_IMMI_24]+_kids[1]->_cost[IMMI_24]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, i2b_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_RSHIFTI__LOADI_MEMORY__RCX_REGI, _RShiftI__LoadI_memory__rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, sarI_rReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, sarI_rReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, sarI_rReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, sarI_rReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, sarI_rReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, sarI_rReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, sarI_rReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, sarI_rReg_CL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_RSHIFTI__LOADI_MEMORY__IMMI8, _RShiftI__LoadI_memory__immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, sarI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, sarI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, sarI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, sarI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, sarI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, sarI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, sarI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, sarI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_RSHIFTI__LOADI_MEMORY__IMMI1, _RShiftI__LoadI_memory__immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, sarI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, sarI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, sarI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, sarI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, sarI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, sarI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, sarI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, sarI_rReg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__LOADI_MEMORY__IMMI_16) && STATE__VALID_CHILD(_kids[1], IMMI_16) &&
        /*sixteen*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__LOADI_MEMORY__IMMI_16]+_kids[1]->_cost[IMMI_16]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadI2S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__LOADI_MEMORY__IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) &&
        /*twentyfour*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__LOADI_MEMORY__IMMI_24]+_kids[1]->_cost[IMMI_24]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadI2B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__LOADUS_MEMORY__IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) &&
        /*twentyfour*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__LOADUS_MEMORY__IMMI_24]+_kids[1]->_cost[IMMI_24]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadUS2B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__LOADS_MEMORY__IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) &&
        /*twentyfour*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__LOADS_MEMORY__IMMI_24]+_kids[1]->_cost[IMMI_24]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, loadS2B_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_RSHIFTL__LOADL_MEMORY__RCX_REGI, _RShiftL__LoadL_memory__rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RCX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, sarL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, sarL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, sarL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, sarL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, sarL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, sarL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, sarL_rReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_RSHIFTL__LOADL_MEMORY__IMMI8, _RShiftL__LoadL_memory__immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, sarL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, sarL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, sarL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, sarL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, sarL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, sarL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, sarL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_RSHIFTL__LOADL_MEMORY__IMMI1, _RShiftL__LoadL_memory__immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, sarL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, sarL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, sarL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, sarL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, sarL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, sarL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, sarL_rReg_1_rule, c)
      }
    }
}
void  State::_sub_Op_Rethrow(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, RethrowException_rule, c)
    }
}
void  State::_sub_Op_Return(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, Ret_rule, c)
    }
}
void  State::_sub_Op_RoundDouble(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD];
        DFA_PRODUCTION__SET_VALID(REGD, roundDouble_nop_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
}
void  State::_sub_Op_RoundFloat(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF];
        DFA_PRODUCTION__SET_VALID(REGF, roundFloat_nop_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
}
void  State::_sub_Op_SafePoint(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGP) &&
        (
#line 11396 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Assembler::is_polling_page_far()
#line 9668 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGP]+125;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, safePoint_poll_far_rule, c)
    }
    if(         (
#line 11380 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!Assembler::is_polling_page_far()
#line 9676 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = 125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, safePoint_poll_rule, c)
      }
    }
}
void  State::_sub_Op_SinD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(REGD, sinD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
}
void  State::_sub_Op_SqrtD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMD) &&
        (
#line 1729 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseSSE>=2
#line 9696 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMD]+150;
        DFA_PRODUCTION__SET_VALID(REGD, sqrtD_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) &&
        (
#line 1717 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseSSE>=2
#line 9706 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, sqrtD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 1705 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseSSE>=2
#line 9720 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, sqrtD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVF2D_IMMF_) ) {
      unsigned int c = _kids[0]->_cost[_CONVF2D_IMMF_];
        DFA_PRODUCTION__SET_VALID(_SQRTD__CONVF2D_IMMF__, _SqrtD__ConvF2D_immF___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVF2D__LOADF_MEMORY__) ) {
      unsigned int c = _kids[0]->_cost[_CONVF2D__LOADF_MEMORY__];
        DFA_PRODUCTION__SET_VALID(_SQRTD__CONVF2D__LOADF_MEMORY___, _SqrtD__ConvF2D__LoadF_memory____rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVF2D_REGF_) ) {
      unsigned int c = _kids[0]->_cost[_CONVF2D_REGF_];
        DFA_PRODUCTION__SET_VALID(_SQRTD__CONVF2D_REGF__, _SqrtD__ConvF2D_regF___rule, c)
    }
}
void  State::_sub_Op_StoreB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI8]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmB_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI0) &&
        (
#line 5667 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_base() == NULL) && (Universe::narrow_klass_base() == NULL)
#line 9752 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI0]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmB0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeB_rule, c)
      }
    }
}
void  State::_sub_Op_StoreC(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI16) &&
        (
#line 5654 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseStoreImmI16
#line 9771 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI16]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmI16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI0) &&
        (
#line 5641 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_base() == NULL) && (Universe::narrow_klass_base() == NULL)
#line 9780 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI0]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmC0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeC_rule, c)
      }
    }
}
void  State::_sub_Op_StoreCM(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI0]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmCM0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI0) &&
        (
#line 5692 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_base() == NULL) && (Universe::narrow_klass_base() == NULL)
#line 9803 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI0]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmCM0_reg_rule, c)
      }
    }
}
void  State::_sub_Op_StorePConditional(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_RAX_REGP_RREGP) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_RAX_REGP_RREGP]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, storePConditional_rule, c)
    }
}
void  State::_sub_Op_StoreIConditional(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_RAX_REGI_RREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_RAX_REGI_RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, storeIConditional_rule, c)
    }
}
void  State::_sub_Op_StoreLConditional(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_RAX_REGL_RREGL) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_RAX_REGL_RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RFLAGSREG, storeLConditional_rule, c)
    }
}
void  State::_sub_Op_StoreD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMD0) &&
        (
#line 5780 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_base() == NULL) && (Universe::narrow_klass_base() == NULL)
#line 9834 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMD0]+25;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeD0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMD0) &&
        (
#line 5768 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
!UseCompressedOops || (Universe::narrow_oop_base() != NULL)
#line 9843 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMD0]+50;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeD0_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGD]+95;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeD_rule, c)
      }
    }
}
void  State::_sub_Op_StoreF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMF) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMF]+50;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeF_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMF0) &&
        (
#line 5730 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_base() == NULL) && (Universe::narrow_klass_base() == NULL)
#line 9866 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMF0]+25;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeF0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGF]+95;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeF_rule, c)
      }
    }
}
void  State::_sub_Op_StoreI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _XORI__LOADI_MEMORY__IMMI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_XORI__LOADI_MEMORY__IMMI]+125;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xorI_mem_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _XORI_RREGI__LOADI_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_XORI_RREGI__LOADI_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xorI_mem_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _XORI__LOADI_MEMORY__RREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_XORI__LOADI_MEMORY__RREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xorI_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ORI__LOADI_MEMORY__IMMI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ORI__LOADI_MEMORY__IMMI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, orI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ORI_RREGI__LOADI_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ORI_RREGI__LOADI_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, orI_mem_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ORI__LOADI_MEMORY__RREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ORI__LOADI_MEMORY__RREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, orI_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ANDI__LOADI_MEMORY__IMMI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ANDI__LOADI_MEMORY__IMMI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, andI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ANDI_RREGI__LOADI_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ANDI_RREGI__LOADI_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, andI_mem_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ANDI__LOADI_MEMORY__RREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ANDI__LOADI_MEMORY__RREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, andI_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _URSHIFTI__LOADI_MEMORY__RCX_REGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_URSHIFTI__LOADI_MEMORY__RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, shrI_mem_CL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _URSHIFTI__LOADI_MEMORY__IMMI8) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_URSHIFTI__LOADI_MEMORY__IMMI8]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, shrI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _URSHIFTI__LOADI_MEMORY__IMMI1) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_URSHIFTI__LOADI_MEMORY__IMMI1]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, shrI_mem_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _RSHIFTI__LOADI_MEMORY__RCX_REGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_RSHIFTI__LOADI_MEMORY__RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, sarI_mem_CL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _RSHIFTI__LOADI_MEMORY__IMMI8) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_RSHIFTI__LOADI_MEMORY__IMMI8]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, sarI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _RSHIFTI__LOADI_MEMORY__IMMI1) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_RSHIFTI__LOADI_MEMORY__IMMI1]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, sarI_mem_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__LOADI_MEMORY__RCX_REGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_LSHIFTI__LOADI_MEMORY__RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, salI_mem_CL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__LOADI_MEMORY__IMMI8) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_LSHIFTI__LOADI_MEMORY__IMMI8]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, salI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__LOADI_MEMORY__IMMI1) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_LSHIFTI__LOADI_MEMORY__IMMI1]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, salI_mem_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0__LOADI_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_SUBI_IMMI0__LOADI_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, negI_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _SUBI__LOADI_MEMORY__IMMI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_SUBI__LOADI_MEMORY__IMMI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, subI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _SUBI__LOADI_MEMORY__RREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_SUBI__LOADI_MEMORY__RREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, subI_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__IMMI_M1) &&
        (
#line 6799 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseIncDec
#line 10030 "../generated/adfiles/dfa_x86_64.cpp"
) && /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__IMMI_M1]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, decI_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__IMMI1) &&
        (
#line 6772 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseIncDec
#line 10041 "../generated/adfiles/dfa_x86_64.cpp"
) && /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__IMMI1]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, incI_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__IMMI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__IMMI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI_RREGI__LOADI_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI_RREGI__LOADI_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addI_mem_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__RREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__RREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addI_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI0) &&
        (
#line 5591 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_base() == NULL) && (Universe::narrow_klass_base() == NULL)
#line 10079 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI0]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmI0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeI_rule, c)
      }
    }
}
void  State::_sub_Op_StoreL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _XORL__LOADL_MEMORY__IMML32) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_XORL__LOADL_MEMORY__IMML32]+125;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xorL_mem_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _XORL_RREGL__LOADL_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_XORL_RREGL__LOADL_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xorL_mem_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _XORL__LOADL_MEMORY__RREGL) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_XORL__LOADL_MEMORY__RREGL]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xorL_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ORL__LOADL_MEMORY__IMML32) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ORL__LOADL_MEMORY__IMML32]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, orL_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ORL_RREGL__LOADL_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ORL_RREGL__LOADL_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, orL_mem_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ORL__LOADL_MEMORY__RREGL) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ORL__LOADL_MEMORY__RREGL]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, orL_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ANDL__LOADL_MEMORY__IMML32) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ANDL__LOADL_MEMORY__IMML32]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, andL_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ANDL_RREGL__LOADL_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ANDL_RREGL__LOADL_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, andL_mem_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ANDL__LOADL_MEMORY__RREGL) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ANDL__LOADL_MEMORY__RREGL]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, andL_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _URSHIFTL__LOADL_MEMORY__RCX_REGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_URSHIFTL__LOADL_MEMORY__RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, shrL_mem_CL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _URSHIFTL__LOADL_MEMORY__IMMI8) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_URSHIFTL__LOADL_MEMORY__IMMI8]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, shrL_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _URSHIFTL__LOADL_MEMORY__IMMI1) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_URSHIFTL__LOADL_MEMORY__IMMI1]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, shrL_mem_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _RSHIFTL__LOADL_MEMORY__RCX_REGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_RSHIFTL__LOADL_MEMORY__RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, sarL_mem_CL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _RSHIFTL__LOADL_MEMORY__IMMI8) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_RSHIFTL__LOADL_MEMORY__IMMI8]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, sarL_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _RSHIFTL__LOADL_MEMORY__IMMI1) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_RSHIFTL__LOADL_MEMORY__IMMI1]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, sarL_mem_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__LOADL_MEMORY__RCX_REGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_LSHIFTL__LOADL_MEMORY__RCX_REGI]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, salL_mem_CL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__LOADL_MEMORY__IMMI8) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_LSHIFTL__LOADL_MEMORY__IMMI8]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, salL_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__LOADL_MEMORY__IMMI1) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_LSHIFTL__LOADL_MEMORY__IMMI1]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, salL_mem_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _SUBL_IMML0__LOADL_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_SUBL_IMML0__LOADL_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, negL_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _SUBL__LOADL_MEMORY__IMML32) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_SUBL__LOADL_MEMORY__IMML32]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, subL_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _SUBL__LOADL_MEMORY__RREGL) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_SUBL__LOADL_MEMORY__RREGL]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, subL_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDL__LOADL_MEMORY__IMML_M1) &&
        (
#line 6921 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseIncDec
#line 10243 "../generated/adfiles/dfa_x86_64.cpp"
) && /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDL__LOADL_MEMORY__IMML_M1]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, decL_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDL__LOADL_MEMORY__IMML1) &&
        (
#line 6894 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseIncDec
#line 10254 "../generated/adfiles/dfa_x86_64.cpp"
) && /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDL__LOADL_MEMORY__IMML1]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, incL_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDL__LOADL_MEMORY__IMML32) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDL__LOADL_MEMORY__IMML32]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addL_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDL_RREGL__LOADL_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDL_RREGL__LOADL_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addL_mem_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDL__LOADL_MEMORY__RREGL) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDL__LOADL_MEMORY__RREGL]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addL_mem_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMML32]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMML0) &&
        (
#line 5616 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_base() == NULL) && (Universe::narrow_klass_base() == NULL)
#line 10292 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMML0]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmL0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGL]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeL_rule, c)
      }
    }
}
void  State::_sub_Op_StoreP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMP31) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMP31]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMP0) &&
        (
#line 5498 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseCompressedOops && (Universe::narrow_oop_base() == NULL) && (Universe::narrow_klass_base() == NULL)
#line 10315 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMP0]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmP0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], ANY_REGP) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[ANY_REGP]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeP_rule, c)
      }
    }
}
void  State::_sub_Op_StoreN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMN) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMN]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmN_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMN0) &&
        (
#line 5548 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
Universe::narrow_oop_base() == NULL && Universe::narrow_klass_base() == NULL
#line 10338 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMN0]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmN0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGN) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGN]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeN_rule, c)
      }
    }
}
void  State::_sub_Op_StoreNKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMNKLASS) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMNKLASS]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmNKlass_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], RREGN) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[RREGN]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeNKlass_rule, c)
      }
    }
}
void  State::_sub_Op_StrComp(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_RDI_REGP_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _BINARY_RSI_REGP_RDX_REGI) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_RDI_REGP_RCX_REGI]+_kids[1]->_cost[_BINARY_RSI_REGP_RDX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RAX_REGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, string_compare_rule, c)
    }
}
void  State::_sub_Op_StrEquals(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_RDI_REGP_RSI_REGP) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_RDI_REGP_RSI_REGP]+_kids[1]->_cost[RCX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RAX_REGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, string_equals_rule, c)
    }
}
void  State::_sub_Op_StrIndexOf(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_RDI_REGP_RDX_REGI) && STATE__VALID_CHILD(_kids[1], _BINARY_RSI_REGP_RAX_REGI) &&
        (
#line 10321 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseSSE42Intrinsics
#line 10397 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_RDI_REGP_RDX_REGI]+_kids[1]->_cost[_BINARY_RSI_REGP_RAX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RBX_REGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, string_indexof_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_RDI_REGP_RDX_REGI) && STATE__VALID_CHILD(_kids[1], _BINARY_RSI_REGP_IMMI) &&
        (
#line 10293 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseSSE42Intrinsics
#line 10414 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_RDI_REGP_RDX_REGI]+_kids[1]->_cost[_BINARY_RSI_REGP_IMMI]+100;
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, string_indexof_con_rule, c)
      }
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, string_indexof_con_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, string_indexof_con_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, string_indexof_con_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, string_indexof_con_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, string_indexof_con_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, string_indexof_con_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, string_indexof_con_rule, c)
      }
    }
}
void  State::_sub_Op_SubD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 1274 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 10451 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+150;
        DFA_PRODUCTION__SET_VALID(REGD, subD_reg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 1262 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 10461 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, subD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1250 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 10475 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, subD_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 1239 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 10489 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, subD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 1227 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 10503 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, subD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 1215 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=2) && (UseAVX == 0)
#line 10517 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, subD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
      }
    }
}
void  State::_sub_Op_SubF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 1203 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 10533 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+150;
        DFA_PRODUCTION__SET_VALID(REGF, subF_reg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 1191 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 10543 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, subF_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1179 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0
#line 10557 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, subF_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 1168 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 10571 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, subF_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 1156 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 10585 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, subF_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 1144 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
(UseSSE>=1) && (UseAVX == 0)
#line 10599 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, subF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c+95) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, storeSSF_rule, c+95)
      }
    }
}
void  State::_sub_Op_SubI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_SUBI_RREGI_RREGI, _SubI_rRegI_rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_64) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI_64]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_SUBI_IMMI_64_RCX_REGI, _SubI_immI_64_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_32) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI_32]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_SUBI_IMMI_32_RCX_REGI, _SubI_immI_32_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_SUBI_IMMI0_RCX_REGI, _SubI_immI0_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_SUBI_IMMI0__LOADI_MEMORY_, _SubI_immI0__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, negI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, negI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, negI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, negI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, negI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, negI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, negI_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, negI_rReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_SUBI_IMMI0_RREGI, _SubI_immI0_rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_SUBI__LOADI_MEMORY__IMMI, _SubI__LoadI_memory__immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_SUBI__LOADI_MEMORY__RREGI, _SubI__LoadI_memory__rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, subI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, subI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, subI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, subI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, subI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, subI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, subI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, subI_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, subI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, subI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, subI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, subI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, subI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, subI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, subI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, subI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, subI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, subI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, subI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, subI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, subI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, subI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, subI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, subI_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_SubL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMML0) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_SUBL_IMML0_RREGL, _SubL_immL0_rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMML0) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+_kids[1]->_cost[_LOADL_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_SUBL_IMML0__LOADL_MEMORY_, _SubL_immL0__LoadL_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMML0) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+_kids[1]->_cost[RREGL]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, negL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, negL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, negL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, negL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, negL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, negL_rReg_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, negL_rReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMML32];
        DFA_PRODUCTION__SET_VALID(_SUBL__LOADL_MEMORY__IMML32, _SubL__LoadL_memory__immL32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_SUBL__LOADL_MEMORY__RREGL, _SubL__LoadL_memory__rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, subL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, subL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, subL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, subL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, subL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, subL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, subL_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMML32]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, subL_rReg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, subL_rReg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, subL_rReg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, subL_rReg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, subL_rReg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, subL_rReg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, subL_rReg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, subL_rReg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, subL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, subL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, subL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, subL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, subL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, subL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, subL_rReg_rule, c)
      }
    }
}
void  State::_sub_Op_TailCall(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NO_RBP_REGP) && STATE__VALID_CHILD(_kids[1], RBX_REGP) ) {
      unsigned int c = _kids[0]->_cost[NO_RBP_REGP]+_kids[1]->_cost[RBX_REGP]+300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, TailCalljmpInd_rule, c)
    }
}
void  State::_sub_Op_TailJump(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NO_RBP_REGP) && STATE__VALID_CHILD(_kids[1], RAX_REGP) ) {
      unsigned int c = _kids[0]->_cost[NO_RBP_REGP]+_kids[1]->_cost[RAX_REGP]+300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, tailjmpInd_rule, c)
    }
}
void  State::_sub_Op_TanD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(REGD, tanD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, storeSSD_rule, c+95)
    }
}
void  State::_sub_Op_ThreadLocal(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(R15_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(ANY_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(RREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RBP_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(RSI_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RBX_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(RBP_REGP, tlsLoadP_rule, c)
    }
}
void  State::_sub_Op_URShiftI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGI) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGI]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_NO_RCX_REGI_RCX_REGI, _URShiftI_no_rcx_RegI_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_RREGI_IMMI1, _URShiftI_rRegI_immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI_32_RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGI]+_kids[1]->_cost[_SUBI_IMMI_32_RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_NO_RCX_REGI__SUBI_IMMI_32_RCX_REGI, _URShiftI_no_rcx_RegI__SubI_immI_32_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGI) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGI]+_kids[1]->_cost[_SUBI_IMMI0_RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_NO_RCX_REGI__SUBI_IMMI0_RCX_REGI, _URShiftI_no_rcx_RegI__SubI_immI0_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_RREGI_IMMI8, _URShiftI_rRegI_immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_RREGI_IMMI_M1, _URShiftI_rRegI_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI__LOADI_MEMORY__RCX_REGI, _URShiftI__LoadI_memory__rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RCX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGI, shrI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, shrI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, shrI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, shrI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, shrI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, shrI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, shrI_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, shrI_rReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI__LOADI_MEMORY__IMMI8, _URShiftI__LoadI_memory__immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, shrI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, shrI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, shrI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, shrI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, shrI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, shrI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, shrI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, shrI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI__LOADI_MEMORY__IMMI1, _URShiftI__LoadI_memory__immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, shrI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, shrI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, shrI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, shrI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, shrI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, shrI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, shrI_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, shrI_rReg_1_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGL) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGL]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTL_NO_RCX_REGL_RCX_REGI, _URShiftL_no_rcx_RegL_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_URSHIFTL_RREGL_IMMI1, _URShiftL_rRegL_immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGL) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI_64_RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGL]+_kids[1]->_cost[_SUBI_IMMI_64_RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTL_NO_RCX_REGL__SUBI_IMMI_64_RCX_REGI, _URShiftL_no_rcx_RegL__SubI_immI_64_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NO_RCX_REGL) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[NO_RCX_REGL]+_kids[1]->_cost[_SUBI_IMMI0_RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTL_NO_RCX_REGL__SUBI_IMMI0_RCX_REGI, _URShiftL_no_rcx_RegL__SubI_immI0_rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_URSHIFTL_RREGL_IMMI8, _URShiftL_rRegL_immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_URSHIFTL_RREGL_IMMI_M1, _URShiftL_rRegL_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RCX_REGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTL__LOADL_MEMORY__RCX_REGI, _URShiftL__LoadL_memory__rcx_RegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RCX_REGI) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RCX_REGI]+100;
        DFA_PRODUCTION__SET_VALID(RREGL, shrL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, shrL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, shrL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, shrL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, shrL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, shrL_rReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, shrL_rReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_URSHIFTL__LOADL_MEMORY__IMMI8, _URShiftL__LoadL_memory__immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, shrL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, shrL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, shrL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, shrL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, shrL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, shrL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, shrL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_URSHIFTL__LOADL_MEMORY__IMMI1, _URShiftL__LoadL_memory__immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, shrL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, shrL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, shrL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, shrL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, shrL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, shrL_rReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, shrL_rReg_1_rule, c)
      }
    }
}
void  State::_sub_Op_XorI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_XORI__LOADI_MEMORY__IMMI, _XorI__LoadI_memory__immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_XORI_RREGI__LOADI_MEMORY_, _XorI_rRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI];
        DFA_PRODUCTION__SET_VALID(_XORI__LOADI_MEMORY__RREGI, _XorI__LoadI_memory__rRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[RREGI]+125;
        DFA_PRODUCTION__SET_VALID(RREGI, xorI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(RAX_REGI, xorI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, xorI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RBX_REGI, xorI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, xorI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGI, xorI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGI, xorI_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDI_REGI, xorI_rReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, xorI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, xorI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, xorI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, xorI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, xorI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, xorI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, xorI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, xorI_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, xorI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, xorI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, xorI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, xorI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, xorI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, xorI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, xorI_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, xorI_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, xorI_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, xorI_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, xorI_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, xorI_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, xorI_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, xorI_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, xorI_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, xorI_rReg_im1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, xorI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, xorI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, xorI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, xorI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, xorI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, xorI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, xorI_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, xorI_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], _ADDI_RREGI_IMMI_M1) &&
        (
#line 8669 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 11241 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[_ADDI_RREGI_IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsmskI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsmskI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsmskI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsmskI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsmskI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsmskI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsmskI_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsmskI_rReg_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDI_RREGI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], RREGI) &&
        (
#line 8669 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 11276 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ADDI_RREGI_IMMI_M1]+_kids[1]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsmskI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsmskI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsmskI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsmskI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsmskI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsmskI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsmskI_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsmskI_rReg_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__IMMI_M1) &&
        (
#line 8654 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 11311 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__IMMI_M1]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsmskI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsmskI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsmskI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsmskI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsmskI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsmskI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsmskI_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsmskI_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDI__LOADI_MEMORY__IMMI_M1) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) &&
        (
#line 8654 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 11346 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ADDI__LOADI_MEMORY__IMMI_M1]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGI) || _cost[RREGI] > c) {
        DFA_PRODUCTION__SET_VALID(RREGI, blsmskI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(RAX_REGI) || _cost[RAX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGI, blsmskI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGI) || _cost[NO_RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGI, blsmskI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RBX_REGI) || _cost[RBX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RBX_REGI, blsmskI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGI) || _cost[NO_RAX_RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGI, blsmskI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGI) || _cost[RCX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGI, blsmskI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGI) || _cost[RDX_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGI, blsmskI_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDI_REGI) || _cost[RDI_REGI] > c) {
        DFA_PRODUCTION__SET_VALID(RDI_REGI, blsmskI_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_XORI_RREGI_IMMI_M1, _XorI_rRegI_immI_M1_rule, c)
    }
}
void  State::_sub_Op_XorL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[IMML32];
        DFA_PRODUCTION__SET_VALID(_XORL__LOADL_MEMORY__IMML32, _XorL__LoadL_memory__immL32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_XORL_RREGL__LOADL_MEMORY_, _XorL_rRegL__LoadL_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL];
        DFA_PRODUCTION__SET_VALID(_XORL__LOADL_MEMORY__RREGL, _XorL__LoadL_memory__rRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[RREGL]+125;
        DFA_PRODUCTION__SET_VALID(RREGL, xorL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, xorL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, xorL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, xorL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RAX_REGL, xorL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RCX_REGL, xorL_rReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(RDX_REGL, xorL_rReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, xorL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, xorL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, xorL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, xorL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, xorL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, xorL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, xorL_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML32) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML32]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, xorL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, xorL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, xorL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, xorL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, xorL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, xorL_rReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, xorL_rReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML_M1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, xorL_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, xorL_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, xorL_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, xorL_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, xorL_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, xorL_rReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, xorL_rReg_im1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], RREGL) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, xorL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, xorL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, xorL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, xorL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, xorL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, xorL_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, xorL_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], _ADDL_RREGL_IMML_M1) &&
        (
#line 9016 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 11518 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[_ADDL_RREGL_IMML_M1]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsmskL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsmskL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsmskL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsmskL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsmskL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsmskL_rReg_rReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsmskL_rReg_rReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDL_RREGL_IMML_M1) && STATE__VALID_CHILD(_kids[1], RREGL) &&
        (
#line 9016 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 11550 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ADDL_RREGL_IMML_M1]+_kids[1]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsmskL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsmskL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsmskL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsmskL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsmskL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsmskL_rReg_rReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsmskL_rReg_rReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) && STATE__VALID_CHILD(_kids[1], _ADDL__LOADL_MEMORY__IMML_M1) &&
        (
#line 9001 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 11582 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+_kids[1]->_cost[_ADDL__LOADL_MEMORY__IMML_M1]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsmskL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsmskL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsmskL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsmskL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsmskL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsmskL_rReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsmskL_rReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDL__LOADL_MEMORY__IMML_M1) && STATE__VALID_CHILD(_kids[1], _LOADL_MEMORY_) &&
        (
#line 9001 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86_64.ad"
UseBMI1Instructions
#line 11614 "../generated/adfiles/dfa_x86_64.cpp"
) && /*src*/(_kids[0]->_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ADDL__LOADL_MEMORY__IMML_M1]+_kids[1]->_cost[_LOADL_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(RREGL) || _cost[RREGL] > c) {
        DFA_PRODUCTION__SET_VALID(RREGL, blsmskL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_RDX_REGL) || _cost[NO_RAX_RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_RDX_REGL, blsmskL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RAX_REGL) || _cost[NO_RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RAX_REGL, blsmskL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NO_RCX_REGL) || _cost[NO_RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(NO_RCX_REGL, blsmskL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RAX_REGL) || _cost[RAX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RAX_REGL, blsmskL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RCX_REGL) || _cost[RCX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RCX_REGL, blsmskL_rReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(RDX_REGL) || _cost[RDX_REGL] > c) {
        DFA_PRODUCTION__SET_VALID(RDX_REGL, blsmskL_rReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+_kids[1]->_cost[IMML_M1];
        DFA_PRODUCTION__SET_VALID(_XORL_RREGL_IMML_M1, _XorL_rRegL_immL_M1_rule, c)
    }
}
void  State::_sub_Op_AddVB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2624 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 32
#line 11652 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vadd32B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 2613 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 32
#line 11661 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vadd32B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2602 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 16
#line 11672 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vadd16B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2591 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 16
#line 11681 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd16B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2581 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 16
#line 11692 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2570 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 11703 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vadd8B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2560 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 11712 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vadd8B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 2549 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 11723 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vadd4B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 2539 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 11732 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vadd4B_rule, c)
      }
    }
}
void  State::_sub_Op_AddVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2721 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 11745 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vadd16S_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 2710 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 11754 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vadd16S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2699 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 11765 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vadd8S_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2688 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 11774 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd8S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2678 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 11785 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2667 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 11796 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vadd4S_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2657 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 11805 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vadd4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 2646 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 11816 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vadd2S_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 2636 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 11825 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vadd2S_rule, c)
      }
    }
}
void  State::_sub_Op_AddVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2797 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 11838 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vadd8I_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 2786 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 11847 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vadd8I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2775 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 11858 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vadd4I_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2764 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 11867 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd4I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2754 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 11878 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2743 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 11889 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vadd2I_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2733 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 11898 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vadd2I_rule, c)
      }
    }
}
void  State::_sub_Op_AddVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2852 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 4
#line 11911 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vadd4L_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 2841 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 4
#line 11920 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vadd4L_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2830 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 11931 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vadd2L_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2819 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 11940 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd2L_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2809 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 11951 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd2L_rule, c)
      }
    }
}
void  State::_sub_Op_AddVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2928 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 11964 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vadd8F_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 2917 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 11973 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vadd8F_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2906 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 11984 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vadd4F_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2895 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 11993 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd4F_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2885 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 12004 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2874 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12015 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vadd2F_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2864 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12024 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vadd2F_rule, c)
      }
    }
}
void  State::_sub_Op_AddVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2983 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12037 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vadd4D_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 2972 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12046 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vadd4D_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 2961 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12057 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vadd2D_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2950 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12066 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd2D_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2940 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12077 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vadd2D_rule, c)
      }
    }
}
void  State::_sub_Op_SubVB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3082 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 32
#line 12090 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsub32B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3071 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 32
#line 12099 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsub32B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3060 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 16
#line 12110 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsub16B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3049 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 16
#line 12119 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub16B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3039 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 16
#line 12130 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3028 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12141 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsub8B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3018 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 12150 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsub8B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3007 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12161 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vsub4B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 2997 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 12170 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsub4B_rule, c)
      }
    }
}
void  State::_sub_Op_SubVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3179 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 12183 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsub16S_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3168 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 12192 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsub16S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3157 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12203 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsub8S_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3146 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12212 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub8S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3136 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 12223 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3125 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12234 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsub4S_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3115 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 12243 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsub4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3104 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12254 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vsub2S_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3094 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12263 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsub2S_rule, c)
      }
    }
}
void  State::_sub_Op_SubVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3255 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 12276 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsub8I_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3244 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 12285 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsub8I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3233 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12296 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsub4I_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3222 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12305 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub4I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3212 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 12316 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3201 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12327 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsub2I_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3191 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12336 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsub2I_rule, c)
      }
    }
}
void  State::_sub_Op_SubVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3310 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 4
#line 12349 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsub4L_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3299 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 4
#line 12358 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsub4L_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3288 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12369 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsub2L_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3277 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12378 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub2L_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3267 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12389 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub2L_rule, c)
      }
    }
}
void  State::_sub_Op_SubVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3386 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12402 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsub8F_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3375 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12411 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsub8F_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3364 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12422 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsub4F_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3353 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12431 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub4F_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3343 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 12442 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3332 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12453 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsub2F_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3322 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12462 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsub2F_rule, c)
      }
    }
}
void  State::_sub_Op_SubVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3441 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12475 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsub4D_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3430 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12484 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsub4D_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3419 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12495 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsub2D_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3408 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12504 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub2D_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3398 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12515 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsub2D_rule, c)
      }
    }
}
void  State::_sub_Op_MulVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3540 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 12528 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vmul16S_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3529 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 12537 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vmul16S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3518 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12548 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vmul8S_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3507 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12557 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vmul8S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3497 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 12568 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vmul8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3486 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12579 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vmul4S_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3476 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 12588 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vmul4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3465 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12599 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vmul2S_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3455 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12608 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vmul2S_rule, c)
      }
    }
}
void  State::_sub_Op_MulVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3616 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 12621 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vmul8I_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3605 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 12630 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vmul8I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3594 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12641 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vmul4I_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3583 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12650 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vmul4I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3573 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseSSE > 3 && n->as_Vector()->length() == 4
#line 12661 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vmul4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3562 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12672 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vmul2I_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3552 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseSSE > 3 && n->as_Vector()->length() == 2
#line 12681 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vmul2I_rule, c)
      }
    }
}
void  State::_sub_Op_MulVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3692 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12694 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vmul8F_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3681 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12703 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vmul8F_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3670 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12714 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vmul4F_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3659 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12723 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vmul4F_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3649 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 12734 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vmul4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3638 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12745 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vmul2F_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3628 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12754 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vmul2F_rule, c)
      }
    }
}
void  State::_sub_Op_MulVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3747 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12767 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vmul4D_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3736 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12776 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vmul4D_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3725 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12787 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vmul2D_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3714 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12796 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vmul2D_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3704 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12807 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vmul2D_rule, c)
      }
    }
}
void  State::_sub_Op_DivVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3825 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12820 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vdiv8F_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3814 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12829 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vdiv8F_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3803 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12840 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vdiv4F_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3792 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12849 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vdiv4F_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3782 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 12860 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vdiv4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3771 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12871 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vdiv2F_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3761 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12880 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vdiv2F_rule, c)
      }
    }
}
void  State::_sub_Op_DivVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3880 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12893 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vdiv4D_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 3869 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 12902 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vdiv4D_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 3858 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12913 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vdiv2D_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3847 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 12922 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vdiv2D_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3837 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 12933 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vdiv2D_rule, c)
      }
    }
}
void  State::_sub_Op_LShiftCntV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vshiftcnt_rule, c)
    }
}
void  State::_sub_Op_RShiftCntV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], RREGI) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vshiftcnt_0_rule, c)
    }
}
void  State::_sub_Op_LShiftVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4045 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 12958 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsll16S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4034 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 12967 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsll16S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4023 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12978 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsll8S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4012 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 12987 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsll8S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4002 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 12998 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsll8S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3992 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 13009 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsll8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 3981 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13020 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsll4S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3970 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13029 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsll4S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 3960 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13040 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsll4S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3950 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13051 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsll4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 3939 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13062 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vsll2S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3928 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13071 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsll2S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 3918 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13082 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsll2S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 3908 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13093 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsll2S_rule, c)
      }
    }
}
void  State::_sub_Op_LShiftVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4152 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 13106 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsll8I_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4141 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 13115 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsll8I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4130 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13126 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsll4I_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4119 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13135 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsll4I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4109 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13146 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsll4I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4099 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13157 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsll4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4088 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13168 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsll2I_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4077 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13177 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsll2I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4067 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13188 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsll2I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4057 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13199 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsll2I_rule, c)
      }
    }
}
void  State::_sub_Op_LShiftVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4217 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 4
#line 13212 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsll4L_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4206 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 4
#line 13221 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsll4L_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4195 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13232 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsll2L_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4184 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13241 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsll2L_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4174 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13252 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsll2L_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4164 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13263 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsll2L_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4695 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 13276 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsra16S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4684 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 13285 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsra16S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4673 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 13296 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsra8S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4662 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 13305 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsra8S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4652 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 13316 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsra8S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4642 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 13327 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsra8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4631 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13338 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsra4S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4620 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13347 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsra4S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4610 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13358 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsra4S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4600 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13369 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsra4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4589 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13380 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vsra2S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4578 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13389 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsra2S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4568 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13400 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsra2S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4558 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13411 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsra2S_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4802 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 13424 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsra8I_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4791 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 13433 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsra8I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4780 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13444 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsra4I_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4769 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13453 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsra4I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4759 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13464 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsra4I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4749 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13475 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsra4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4738 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13486 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsra2I_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4727 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13495 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsra2I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4717 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13506 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsra2I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4707 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13517 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsra2I_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4372 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 13530 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsrl16S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4361 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 16
#line 13539 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsrl16S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4350 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 13550 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsrl8S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4339 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 8
#line 13559 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsrl8S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4329 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 13570 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsrl8S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4319 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 13581 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsrl8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4308 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13592 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsrl4S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4297 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13601 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsrl4S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4287 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13612 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsrl4S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4277 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13623 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsrl4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4266 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13634 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vsrl2S_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4255 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13643 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsrl2S_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4245 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13654 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsrl2S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4235 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13665 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vsrl2S_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4479 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 13678 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsrl8I_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4468 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 8
#line 13687 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsrl8I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4457 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13698 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsrl4I_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4446 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 4
#line 13707 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsrl4I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4436 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13718 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsrl4I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4426 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 13729 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsrl4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4415 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13740 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vsrl2I_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4404 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13749 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsrl2I_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4394 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13760 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsrl2I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4384 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13771 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vsrl2I_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4544 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 4
#line 13784 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vsrl4L_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4533 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length() == 4
#line 13793 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vsrl4L_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4522 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13804 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vsrl2L_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4511 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length() == 2
#line 13813 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsrl2L_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI8) &&
        (
#line 4501 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13824 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsrl2L_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4491 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 13835 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vsrl2L_rule, c)
      }
    }
}
void  State::_sub_Op_AndV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 4903 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length_in_bytes() == 32
#line 13848 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vand32B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 4892 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length_in_bytes() == 32
#line 13857 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vand32B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 4881 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 16
#line 13868 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vand16B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4870 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 16
#line 13877 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vand16B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4860 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length_in_bytes() == 16
#line 13888 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vand16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4849 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 8
#line 13899 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vand8B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4839 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length_in_bytes() == 8
#line 13908 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vand8B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4828 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 4
#line 13919 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vand4B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4818 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length_in_bytes() == 4
#line 13928 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vand4B_rule, c)
      }
    }
}
void  State::_sub_Op_OrV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 5001 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length_in_bytes() == 32
#line 13941 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vor32B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 4990 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length_in_bytes() == 32
#line 13950 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vor32B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 4979 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 16
#line 13961 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vor16B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4968 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 16
#line 13970 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vor16B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4958 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length_in_bytes() == 16
#line 13981 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vor16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4947 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 8
#line 13992 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vor8B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4937 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length_in_bytes() == 8
#line 14001 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vor8B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4926 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 4
#line 14012 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vor4B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 4916 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length_in_bytes() == 4
#line 14021 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vor4B_rule, c)
      }
    }
}
void  State::_sub_Op_XorV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 5099 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length_in_bytes() == 32
#line 14034 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECY, vxor32B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 5088 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 1 && n->as_Vector()->length_in_bytes() == 32
#line 14043 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECY]+_kids[1]->_cost[VECY]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, vxor32B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LOADVECTOR_MEMORY_) &&
        (
#line 5077 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 16
#line 14054 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LOADVECTOR_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(VECX, vxor16B_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5066 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 16
#line 14063 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vxor16B_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5056 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length_in_bytes() == 16
#line 14074 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, vxor16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5045 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 8
#line 14085 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
        DFA_PRODUCTION__SET_VALID(VECD, vxor8B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5035 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length_in_bytes() == 8
#line 14094 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, vxor8B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 5024 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
UseAVX > 0 && n->as_Vector()->length_in_bytes() == 4
#line 14105 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
        DFA_PRODUCTION__SET_VALID(VECS, vxor4B_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECS) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 5014 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length_in_bytes() == 4
#line 14114 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECS]+_kids[1]->_cost[VECS]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, vxor4B_rule, c)
      }
    }
}
void  State::_sub_Op_LoadVector(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADVECTOR_MEMORY_, _LoadVector_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 1780 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_LoadVector()->memory_size() == 32
#line 14131 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(VECY, loadV32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 1768 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_LoadVector()->memory_size() == 16
#line 14140 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(VECX, loadV16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 1756 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_LoadVector()->memory_size() == 8
#line 14149 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(VECD, loadV8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 1744 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_LoadVector()->memory_size() == 4
#line 14158 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(VECS, loadV4_rule, c)
    }
}
void  State::_sub_Op_StoreVector(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], VECY) &&
        (
#line 1825 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_StoreVector()->memory_size() == 32
#line 14169 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[VECY]+145;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeV32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1814 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_StoreVector()->memory_size() == 16
#line 14178 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[VECX]+145;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeV16_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1803 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_StoreVector()->memory_size() == 8
#line 14189 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[VECD]+145;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeV8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], VECS) &&
        (
#line 1792 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_StoreVector()->memory_size() == 4
#line 14200 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[VECS]+145;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeV4_rule, c)
      }
    }
}
void  State::_sub_Op_ReplicateB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 1977 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 32
#line 14213 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECY, Repl32B_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 1967 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 16
#line 14222 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECX, Repl16B_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 1957 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14231 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECD, Repl8B_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 1947 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14240 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECS, Repl4B_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 1932 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 32
#line 14249 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl32B_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 1920 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 16
#line 14260 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl16B_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 1910 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14271 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, Repl8B_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 1900 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14282 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, Repl4B_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 1881 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 32
#line 14293 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl32B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 1865 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 16
#line 14304 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 1851 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14315 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, Repl8B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 1837 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14326 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, Repl4B_rule, c)
      }
    }
}
void  State::_sub_Op_ReplicateS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 2122 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 16
#line 14339 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECY, Repl16S_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 2112 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14348 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECX, Repl8S_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 2102 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14357 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECD, Repl4S_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 2092 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14366 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECS, Repl2S_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 2077 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 16
#line 14375 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl16S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 2065 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14386 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl8S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 2055 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14397 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, Repl4S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 2045 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14408 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, Repl2S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 2028 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 16
#line 14419 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl16S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 2014 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14430 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 2002 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14441 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, Repl4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 1990 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14452 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECS) || _cost[VECS] > c) {
        DFA_PRODUCTION__SET_VALID(VECS, Repl2S_rule, c)
      }
    }
}
void  State::_sub_Op_ReplicateI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 2270 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14465 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECY, Repl8I_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 2260 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14474 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECX, Repl4I_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 2250 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14483 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(VECD, Repl2I_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) &&
        (
#line 2235 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14492 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl8I_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) &&
        (
#line 2223 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14503 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl4I_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) &&
        (
#line 2211 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14514 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, Repl2I_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 2196 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14525 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl8I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 2184 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14536 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl4I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 2174 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14547 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, Repl2I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 2159 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14558 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl8I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 2147 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14569 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGI) &&
        (
#line 2135 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14580 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGI]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, Repl2I_rule, c)
      }
    }
}
void  State::_sub_Op_ReplicateL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMML0) &&
        (
#line 2412 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14593 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+100;
        DFA_PRODUCTION__SET_VALID(VECY, Repl4L_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMML0) &&
        (
#line 2402 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14602 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+100;
        DFA_PRODUCTION__SET_VALID(VECX, Repl2L_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) &&
        (
#line 2387 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14611 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl4L_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) &&
        (
#line 2375 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14622 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl2L_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML) &&
        (
#line 2360 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14633 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMML]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl4L_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML) &&
        (
#line 2348 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14644 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMML]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl2L_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) &&
        (
#line 2296 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14655 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl4L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], RREGL) &&
        (
#line 2284 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14666 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[RREGL]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl2L_rule, c)
      }
    }
}
void  State::_sub_Op_ReplicateF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMF0) &&
        (
#line 2478 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14679 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMF0]+100;
        DFA_PRODUCTION__SET_VALID(VECY, Repl8F_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMF0) &&
        (
#line 2468 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14688 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMF0]+100;
        DFA_PRODUCTION__SET_VALID(VECX, Repl4F_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMF0) &&
        (
#line 2458 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14697 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMF0]+100;
        DFA_PRODUCTION__SET_VALID(VECD, Repl2F_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 2445 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 8
#line 14706 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl8F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 2435 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14717 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 2425 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14728 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION__SET_VALID(VECD, Repl2F_rule, c)
      }
    }
}
void  State::_sub_Op_ReplicateD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMD0) &&
        (
#line 2523 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14741 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMD0]+100;
        DFA_PRODUCTION__SET_VALID(VECY, Repl4D_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMD0) &&
        (
#line 2513 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14750 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMD0]+100;
        DFA_PRODUCTION__SET_VALID(VECX, Repl2D_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 2500 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 4
#line 14759 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
      if (STATE__NOT_YET_VALID(VECY) || _cost[VECY] > c) {
        DFA_PRODUCTION__SET_VALID(VECY, Repl4D_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 2490 "/Users/yuanqixiang/Downloads/openjdk8/hotspot/src/cpu/x86/vm/x86.ad"
n->as_Vector()->length() == 2
#line 14770 "../generated/adfiles/dfa_x86_64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION__SET_VALID(VECX, Repl2D_rule, c)
      }
    }
}
bool State::DFA(int opcode, const Node *n) {
  switch(opcode) {
  case Op_RegN: { _sub_Op_RegN(n);
    break;
  }
  case Op_RegI: { _sub_Op_RegI(n);
    break;
  }
  case Op_RegP: { _sub_Op_RegP(n);
    break;
  }
  case Op_RegF: { _sub_Op_RegF(n);
    break;
  }
  case Op_RegD: { _sub_Op_RegD(n);
    break;
  }
  case Op_RegL: { _sub_Op_RegL(n);
    break;
  }
  case Op_RegFlags: { _sub_Op_RegFlags(n);
    break;
  }
  case Op_VecS: { _sub_Op_VecS(n);
    break;
  }
  case Op_VecD: { _sub_Op_VecD(n);
    break;
  }
  case Op_VecX: { _sub_Op_VecX(n);
    break;
  }
  case Op_VecY: { _sub_Op_VecY(n);
    break;
  }
  case Op_AbsD: { _sub_Op_AbsD(n);
    break;
  }
  case Op_AbsF: { _sub_Op_AbsF(n);
    break;
  }
  case Op_AddD: { _sub_Op_AddD(n);
    break;
  }
  case Op_AddF: { _sub_Op_AddF(n);
    break;
  }
  case Op_AddI: { _sub_Op_AddI(n);
    break;
  }
  case Op_AddL: { _sub_Op_AddL(n);
    break;
  }
  case Op_AddP: { _sub_Op_AddP(n);
    break;
  }
  case Op_AndI: { _sub_Op_AndI(n);
    break;
  }
  case Op_AndL: { _sub_Op_AndL(n);
    break;
  }
  case Op_AryEq: { _sub_Op_AryEq(n);
    break;
  }
  case Op_Binary: { _sub_Op_Binary(n);
    break;
  }
  case Op_Bool: { _sub_Op_Bool(n);
    break;
  }
  case Op_ReverseBytesI: { _sub_Op_ReverseBytesI(n);
    break;
  }
  case Op_ReverseBytesL: { _sub_Op_ReverseBytesL(n);
    break;
  }
  case Op_ReverseBytesUS: { _sub_Op_ReverseBytesUS(n);
    break;
  }
  case Op_ReverseBytesS: { _sub_Op_ReverseBytesS(n);
    break;
  }
  case Op_CallDynamicJava: { _sub_Op_CallDynamicJava(n);
    break;
  }
  case Op_CallLeaf: { _sub_Op_CallLeaf(n);
    break;
  }
  case Op_CallLeafNoFP: { _sub_Op_CallLeafNoFP(n);
    break;
  }
  case Op_CallRuntime: { _sub_Op_CallRuntime(n);
    break;
  }
  case Op_CallStaticJava: { _sub_Op_CallStaticJava(n);
    break;
  }
  case Op_CastII: { _sub_Op_CastII(n);
    break;
  }
  case Op_CastX2P: { _sub_Op_CastX2P(n);
    break;
  }
  case Op_CastP2X: { _sub_Op_CastP2X(n);
    break;
  }
  case Op_CastPP: { _sub_Op_CastPP(n);
    break;
  }
  case Op_CheckCastPP: { _sub_Op_CheckCastPP(n);
    break;
  }
  case Op_ClearArray: { _sub_Op_ClearArray(n);
    break;
  }
  case Op_CMoveD: { _sub_Op_CMoveD(n);
    break;
  }
  case Op_CMoveF: { _sub_Op_CMoveF(n);
    break;
  }
  case Op_CMoveI: { _sub_Op_CMoveI(n);
    break;
  }
  case Op_CMoveL: { _sub_Op_CMoveL(n);
    break;
  }
  case Op_CMoveP: { _sub_Op_CMoveP(n);
    break;
  }
  case Op_CMoveN: { _sub_Op_CMoveN(n);
    break;
  }
  case Op_CmpN: { _sub_Op_CmpN(n);
    break;
  }
  case Op_CmpD: { _sub_Op_CmpD(n);
    break;
  }
  case Op_CmpD3: { _sub_Op_CmpD3(n);
    break;
  }
  case Op_CmpF: { _sub_Op_CmpF(n);
    break;
  }
  case Op_CmpF3: { _sub_Op_CmpF3(n);
    break;
  }
  case Op_CmpI: { _sub_Op_CmpI(n);
    break;
  }
  case Op_CmpL: { _sub_Op_CmpL(n);
    break;
  }
  case Op_CmpL3: { _sub_Op_CmpL3(n);
    break;
  }
  case Op_CmpLTMask: { _sub_Op_CmpLTMask(n);
    break;
  }
  case Op_CmpP: { _sub_Op_CmpP(n);
    break;
  }
  case Op_CmpU: { _sub_Op_CmpU(n);
    break;
  }
  case Op_CompareAndSwapI: { _sub_Op_CompareAndSwapI(n);
    break;
  }
  case Op_CompareAndSwapL: { _sub_Op_CompareAndSwapL(n);
    break;
  }
  case Op_CompareAndSwapP: { _sub_Op_CompareAndSwapP(n);
    break;
  }
  case Op_CompareAndSwapN: { _sub_Op_CompareAndSwapN(n);
    break;
  }
  case Op_GetAndAddI: { _sub_Op_GetAndAddI(n);
    break;
  }
  case Op_GetAndAddL: { _sub_Op_GetAndAddL(n);
    break;
  }
  case Op_GetAndSetI: { _sub_Op_GetAndSetI(n);
    break;
  }
  case Op_GetAndSetL: { _sub_Op_GetAndSetL(n);
    break;
  }
  case Op_GetAndSetP: { _sub_Op_GetAndSetP(n);
    break;
  }
  case Op_GetAndSetN: { _sub_Op_GetAndSetN(n);
    break;
  }
  case Op_ConN: { _sub_Op_ConN(n);
    break;
  }
  case Op_ConNKlass: { _sub_Op_ConNKlass(n);
    break;
  }
  case Op_ConD: { _sub_Op_ConD(n);
    break;
  }
  case Op_ConF: { _sub_Op_ConF(n);
    break;
  }
  case Op_ConI: { _sub_Op_ConI(n);
    break;
  }
  case Op_ConL: { _sub_Op_ConL(n);
    break;
  }
  case Op_ConP: { _sub_Op_ConP(n);
    break;
  }
  case Op_Conv2B: { _sub_Op_Conv2B(n);
    break;
  }
  case Op_ConvD2F: { _sub_Op_ConvD2F(n);
    break;
  }
  case Op_ConvD2I: { _sub_Op_ConvD2I(n);
    break;
  }
  case Op_ConvD2L: { _sub_Op_ConvD2L(n);
    break;
  }
  case Op_ConvF2D: { _sub_Op_ConvF2D(n);
    break;
  }
  case Op_ConvF2I: { _sub_Op_ConvF2I(n);
    break;
  }
  case Op_ConvF2L: { _sub_Op_ConvF2L(n);
    break;
  }
  case Op_ConvI2D: { _sub_Op_ConvI2D(n);
    break;
  }
  case Op_ConvI2F: { _sub_Op_ConvI2F(n);
    break;
  }
  case Op_ConvI2L: { _sub_Op_ConvI2L(n);
    break;
  }
  case Op_ConvL2D: { _sub_Op_ConvL2D(n);
    break;
  }
  case Op_ConvL2F: { _sub_Op_ConvL2F(n);
    break;
  }
  case Op_ConvL2I: { _sub_Op_ConvL2I(n);
    break;
  }
  case Op_CosD: { _sub_Op_CosD(n);
    break;
  }
  case Op_CountedLoopEnd: { _sub_Op_CountedLoopEnd(n);
    break;
  }
  case Op_CountLeadingZerosI: { _sub_Op_CountLeadingZerosI(n);
    break;
  }
  case Op_CountLeadingZerosL: { _sub_Op_CountLeadingZerosL(n);
    break;
  }
  case Op_CountTrailingZerosI: { _sub_Op_CountTrailingZerosI(n);
    break;
  }
  case Op_CountTrailingZerosL: { _sub_Op_CountTrailingZerosL(n);
    break;
  }
  case Op_CreateEx: { _sub_Op_CreateEx(n);
    break;
  }
  case Op_DecodeN: { _sub_Op_DecodeN(n);
    break;
  }
  case Op_DecodeNKlass: { _sub_Op_DecodeNKlass(n);
    break;
  }
  case Op_DivD: { _sub_Op_DivD(n);
    break;
  }
  case Op_DivF: { _sub_Op_DivF(n);
    break;
  }
  case Op_DivI: { _sub_Op_DivI(n);
    break;
  }
  case Op_DivL: { _sub_Op_DivL(n);
    break;
  }
  case Op_DivModI: { _sub_Op_DivModI(n);
    break;
  }
  case Op_DivModL: { _sub_Op_DivModL(n);
    break;
  }
  case Op_EncodeISOArray: { _sub_Op_EncodeISOArray(n);
    break;
  }
  case Op_EncodeP: { _sub_Op_EncodeP(n);
    break;
  }
  case Op_EncodePKlass: { _sub_Op_EncodePKlass(n);
    break;
  }
  case Op_ExpD: { _sub_Op_ExpD(n);
    break;
  }
  case Op_FastLock: { _sub_Op_FastLock(n);
    break;
  }
  case Op_FastUnlock: { _sub_Op_FastUnlock(n);
    break;
  }
  case Op_Goto: { _sub_Op_Goto(n);
    break;
  }
  case Op_Halt: { _sub_Op_Halt(n);
    break;
  }
  case Op_If: { _sub_Op_If(n);
    break;
  }
  case Op_Jump: { _sub_Op_Jump(n);
    break;
  }
  case Op_LShiftI: { _sub_Op_LShiftI(n);
    break;
  }
  case Op_LShiftL: { _sub_Op_LShiftL(n);
    break;
  }
  case Op_LoadB: { _sub_Op_LoadB(n);
    break;
  }
  case Op_LoadUB: { _sub_Op_LoadUB(n);
    break;
  }
  case Op_LoadUS: { _sub_Op_LoadUS(n);
    break;
  }
  case Op_LoadD: { _sub_Op_LoadD(n);
    break;
  }
  case Op_LoadF: { _sub_Op_LoadF(n);
    break;
  }
  case Op_LoadI: { _sub_Op_LoadI(n);
    break;
  }
  case Op_LoadKlass: { _sub_Op_LoadKlass(n);
    break;
  }
  case Op_LoadNKlass: { _sub_Op_LoadNKlass(n);
    break;
  }
  case Op_LoadL: { _sub_Op_LoadL(n);
    break;
  }
  case Op_LoadPLocked: { _sub_Op_LoadPLocked(n);
    break;
  }
  case Op_LoadP: { _sub_Op_LoadP(n);
    break;
  }
  case Op_LoadN: { _sub_Op_LoadN(n);
    break;
  }
  case Op_LoadRange: { _sub_Op_LoadRange(n);
    break;
  }
  case Op_LoadS: { _sub_Op_LoadS(n);
    break;
  }
  case Op_LogD: { _sub_Op_LogD(n);
    break;
  }
  case Op_Log10D: { _sub_Op_Log10D(n);
    break;
  }
  case Op_MaxI: { _sub_Op_MaxI(n);
    break;
  }
  case Op_MemBarAcquire: { _sub_Op_MemBarAcquire(n);
    break;
  }
  case Op_LoadFence: { _sub_Op_LoadFence(n);
    break;
  }
  case Op_MemBarAcquireLock: { _sub_Op_MemBarAcquireLock(n);
    break;
  }
  case Op_MemBarRelease: { _sub_Op_MemBarRelease(n);
    break;
  }
  case Op_StoreFence: { _sub_Op_StoreFence(n);
    break;
  }
  case Op_MemBarReleaseLock: { _sub_Op_MemBarReleaseLock(n);
    break;
  }
  case Op_MemBarVolatile: { _sub_Op_MemBarVolatile(n);
    break;
  }
  case Op_MemBarStoreStore: { _sub_Op_MemBarStoreStore(n);
    break;
  }
  case Op_MinI: { _sub_Op_MinI(n);
    break;
  }
  case Op_ModI: { _sub_Op_ModI(n);
    break;
  }
  case Op_ModL: { _sub_Op_ModL(n);
    break;
  }
  case Op_MoveI2F: { _sub_Op_MoveI2F(n);
    break;
  }
  case Op_MoveF2I: { _sub_Op_MoveF2I(n);
    break;
  }
  case Op_MoveL2D: { _sub_Op_MoveL2D(n);
    break;
  }
  case Op_MoveD2L: { _sub_Op_MoveD2L(n);
    break;
  }
  case Op_MulD: { _sub_Op_MulD(n);
    break;
  }
  case Op_MulF: { _sub_Op_MulF(n);
    break;
  }
  case Op_MulHiL: { _sub_Op_MulHiL(n);
    break;
  }
  case Op_MulI: { _sub_Op_MulI(n);
    break;
  }
  case Op_MulL: { _sub_Op_MulL(n);
    break;
  }
  case Op_NegD: { _sub_Op_NegD(n);
    break;
  }
  case Op_NegF: { _sub_Op_NegF(n);
    break;
  }
  case Op_OrI: { _sub_Op_OrI(n);
    break;
  }
  case Op_OrL: { _sub_Op_OrL(n);
    break;
  }
  case Op_OverflowAddI: { _sub_Op_OverflowAddI(n);
    break;
  }
  case Op_OverflowSubI: { _sub_Op_OverflowSubI(n);
    break;
  }
  case Op_OverflowMulI: { _sub_Op_OverflowMulI(n);
    break;
  }
  case Op_OverflowAddL: { _sub_Op_OverflowAddL(n);
    break;
  }
  case Op_OverflowSubL: { _sub_Op_OverflowSubL(n);
    break;
  }
  case Op_OverflowMulL: { _sub_Op_OverflowMulL(n);
    break;
  }
  case Op_PartialSubtypeCheck: { _sub_Op_PartialSubtypeCheck(n);
    break;
  }
  case Op_PopCountI: { _sub_Op_PopCountI(n);
    break;
  }
  case Op_PopCountL: { _sub_Op_PopCountL(n);
    break;
  }
  case Op_PowD: { _sub_Op_PowD(n);
    break;
  }
  case Op_PrefetchAllocation: { _sub_Op_PrefetchAllocation(n);
    break;
  }
  case Op_PrefetchRead: { _sub_Op_PrefetchRead(n);
    break;
  }
  case Op_PrefetchWrite: { _sub_Op_PrefetchWrite(n);
    break;
  }
  case Op_RShiftI: { _sub_Op_RShiftI(n);
    break;
  }
  case Op_RShiftL: { _sub_Op_RShiftL(n);
    break;
  }
  case Op_Rethrow: { _sub_Op_Rethrow(n);
    break;
  }
  case Op_Return: { _sub_Op_Return(n);
    break;
  }
  case Op_RoundDouble: { _sub_Op_RoundDouble(n);
    break;
  }
  case Op_RoundFloat: { _sub_Op_RoundFloat(n);
    break;
  }
  case Op_SafePoint: { _sub_Op_SafePoint(n);
    break;
  }
  case Op_SinD: { _sub_Op_SinD(n);
    break;
  }
  case Op_SqrtD: { _sub_Op_SqrtD(n);
    break;
  }
  case Op_StoreB: { _sub_Op_StoreB(n);
    break;
  }
  case Op_StoreC: { _sub_Op_StoreC(n);
    break;
  }
  case Op_StoreCM: { _sub_Op_StoreCM(n);
    break;
  }
  case Op_StorePConditional: { _sub_Op_StorePConditional(n);
    break;
  }
  case Op_StoreIConditional: { _sub_Op_StoreIConditional(n);
    break;
  }
  case Op_StoreLConditional: { _sub_Op_StoreLConditional(n);
    break;
  }
  case Op_StoreD: { _sub_Op_StoreD(n);
    break;
  }
  case Op_StoreF: { _sub_Op_StoreF(n);
    break;
  }
  case Op_StoreI: { _sub_Op_StoreI(n);
    break;
  }
  case Op_StoreL: { _sub_Op_StoreL(n);
    break;
  }
  case Op_StoreP: { _sub_Op_StoreP(n);
    break;
  }
  case Op_StoreN: { _sub_Op_StoreN(n);
    break;
  }
  case Op_StoreNKlass: { _sub_Op_StoreNKlass(n);
    break;
  }
  case Op_StrComp: { _sub_Op_StrComp(n);
    break;
  }
  case Op_StrEquals: { _sub_Op_StrEquals(n);
    break;
  }
  case Op_StrIndexOf: { _sub_Op_StrIndexOf(n);
    break;
  }
  case Op_SubD: { _sub_Op_SubD(n);
    break;
  }
  case Op_SubF: { _sub_Op_SubF(n);
    break;
  }
  case Op_SubI: { _sub_Op_SubI(n);
    break;
  }
  case Op_SubL: { _sub_Op_SubL(n);
    break;
  }
  case Op_TailCall: { _sub_Op_TailCall(n);
    break;
  }
  case Op_TailJump: { _sub_Op_TailJump(n);
    break;
  }
  case Op_TanD: { _sub_Op_TanD(n);
    break;
  }
  case Op_ThreadLocal: { _sub_Op_ThreadLocal(n);
    break;
  }
  case Op_URShiftI: { _sub_Op_URShiftI(n);
    break;
  }
  case Op_URShiftL: { _sub_Op_URShiftL(n);
    break;
  }
  case Op_XorI: { _sub_Op_XorI(n);
    break;
  }
  case Op_XorL: { _sub_Op_XorL(n);
    break;
  }
  case Op_AddVB: { _sub_Op_AddVB(n);
    break;
  }
  case Op_AddVS: { _sub_Op_AddVS(n);
    break;
  }
  case Op_AddVI: { _sub_Op_AddVI(n);
    break;
  }
  case Op_AddVL: { _sub_Op_AddVL(n);
    break;
  }
  case Op_AddVF: { _sub_Op_AddVF(n);
    break;
  }
  case Op_AddVD: { _sub_Op_AddVD(n);
    break;
  }
  case Op_SubVB: { _sub_Op_SubVB(n);
    break;
  }
  case Op_SubVS: { _sub_Op_SubVS(n);
    break;
  }
  case Op_SubVI: { _sub_Op_SubVI(n);
    break;
  }
  case Op_SubVL: { _sub_Op_SubVL(n);
    break;
  }
  case Op_SubVF: { _sub_Op_SubVF(n);
    break;
  }
  case Op_SubVD: { _sub_Op_SubVD(n);
    break;
  }
  case Op_MulVS: { _sub_Op_MulVS(n);
    break;
  }
  case Op_MulVI: { _sub_Op_MulVI(n);
    break;
  }
  case Op_MulVF: { _sub_Op_MulVF(n);
    break;
  }
  case Op_MulVD: { _sub_Op_MulVD(n);
    break;
  }
  case Op_DivVF: { _sub_Op_DivVF(n);
    break;
  }
  case Op_DivVD: { _sub_Op_DivVD(n);
    break;
  }
  case Op_LShiftCntV: { _sub_Op_LShiftCntV(n);
    break;
  }
  case Op_RShiftCntV: { _sub_Op_RShiftCntV(n);
    break;
  }
  case Op_LShiftVS: { _sub_Op_LShiftVS(n);
    break;
  }
  case Op_LShiftVI: { _sub_Op_LShiftVI(n);
    break;
  }
  case Op_LShiftVL: { _sub_Op_LShiftVL(n);
    break;
  }
  case Op_RShiftVS: { _sub_Op_RShiftVS(n);
    break;
  }
  case Op_RShiftVI: { _sub_Op_RShiftVI(n);
    break;
  }
  case Op_URShiftVS: { _sub_Op_URShiftVS(n);
    break;
  }
  case Op_URShiftVI: { _sub_Op_URShiftVI(n);
    break;
  }
  case Op_URShiftVL: { _sub_Op_URShiftVL(n);
    break;
  }
  case Op_AndV: { _sub_Op_AndV(n);
    break;
  }
  case Op_OrV: { _sub_Op_OrV(n);
    break;
  }
  case Op_XorV: { _sub_Op_XorV(n);
    break;
  }
  case Op_LoadVector: { _sub_Op_LoadVector(n);
    break;
  }
  case Op_StoreVector: { _sub_Op_StoreVector(n);
    break;
  }
  case Op_ReplicateB: { _sub_Op_ReplicateB(n);
    break;
  }
  case Op_ReplicateS: { _sub_Op_ReplicateS(n);
    break;
  }
  case Op_ReplicateI: { _sub_Op_ReplicateI(n);
    break;
  }
  case Op_ReplicateL: { _sub_Op_ReplicateL(n);
    break;
  }
  case Op_ReplicateF: { _sub_Op_ReplicateF(n);
    break;
  }
  case Op_ReplicateD: { _sub_Op_ReplicateD(n);
    break;
  }
  
  default:
    tty->print("Default case invoked for: \n");
    tty->print("   opcode  = %d, \"%s\"\n", opcode, NodeClassNames[opcode]);
    return false;
  }
  return true;
}

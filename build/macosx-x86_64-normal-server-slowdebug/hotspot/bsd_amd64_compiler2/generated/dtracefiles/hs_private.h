/*
 * Generated by dtrace(1M).
 */

#ifndef	_HS_PRIVATE_H
#define	_HS_PRIVATE_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define HS_PRIVATE_STABILITY "___dtrace_stability$hs_private$v1$1_1_5_1_1_0_1_1_0_1_1_5_1_1_5"

#define HS_PRIVATE_TYPEDEFS "___dtrace_typedefs$hs_private$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	HS_PRIVATE_CMS_INITMARK_BEGIN() \
do { \
	__asm__ volatile(".reference " HS_PRIVATE_TYPEDEFS); \
	__dtrace_probe$hs_private$cms__initmark__begin$v1(); \
	__asm__ volatile(".reference " HS_PRIVATE_STABILITY); \
} while (0)
#define	HS_PRIVATE_CMS_INITMARK_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$hs_private$cms__initmark__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	HS_PRIVATE_CMS_INITMARK_END() \
do { \
	__asm__ volatile(".reference " HS_PRIVATE_TYPEDEFS); \
	__dtrace_probe$hs_private$cms__initmark__end$v1(); \
	__asm__ volatile(".reference " HS_PRIVATE_STABILITY); \
} while (0)
#define	HS_PRIVATE_CMS_INITMARK_END_ENABLED() \
	({ int _r = __dtrace_isenabled$hs_private$cms__initmark__end$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	HS_PRIVATE_CMS_REMARK_BEGIN() \
do { \
	__asm__ volatile(".reference " HS_PRIVATE_TYPEDEFS); \
	__dtrace_probe$hs_private$cms__remark__begin$v1(); \
	__asm__ volatile(".reference " HS_PRIVATE_STABILITY); \
} while (0)
#define	HS_PRIVATE_CMS_REMARK_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$hs_private$cms__remark__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	HS_PRIVATE_CMS_REMARK_END() \
do { \
	__asm__ volatile(".reference " HS_PRIVATE_TYPEDEFS); \
	__dtrace_probe$hs_private$cms__remark__end$v1(); \
	__asm__ volatile(".reference " HS_PRIVATE_STABILITY); \
} while (0)
#define	HS_PRIVATE_CMS_REMARK_END_ENABLED() \
	({ int _r = __dtrace_isenabled$hs_private$cms__remark__end$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	HS_PRIVATE_HASHTABLE_NEW_ENTRY(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " HS_PRIVATE_TYPEDEFS); \
	__dtrace_probe$hs_private$hashtable__new_entry$v1$766f6964202a$75696e7433325f74$75696e747074725f74$766f6964202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " HS_PRIVATE_STABILITY); \
} while (0)
#define	HS_PRIVATE_HASHTABLE_NEW_ENTRY_ENABLED() \
	({ int _r = __dtrace_isenabled$hs_private$hashtable__new_entry$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	HS_PRIVATE_SAFEPOINT_BEGIN() \
do { \
	__asm__ volatile(".reference " HS_PRIVATE_TYPEDEFS); \
	__dtrace_probe$hs_private$safepoint__begin$v1(); \
	__asm__ volatile(".reference " HS_PRIVATE_STABILITY); \
} while (0)
#define	HS_PRIVATE_SAFEPOINT_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$hs_private$safepoint__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	HS_PRIVATE_SAFEPOINT_END() \
do { \
	__asm__ volatile(".reference " HS_PRIVATE_TYPEDEFS); \
	__dtrace_probe$hs_private$safepoint__end$v1(); \
	__asm__ volatile(".reference " HS_PRIVATE_STABILITY); \
} while (0)
#define	HS_PRIVATE_SAFEPOINT_END_ENABLED() \
	({ int _r = __dtrace_isenabled$hs_private$safepoint__end$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$hs_private$cms__initmark__begin$v1(void);
extern int __dtrace_isenabled$hs_private$cms__initmark__begin$v1(void);
extern void __dtrace_probe$hs_private$cms__initmark__end$v1(void);
extern int __dtrace_isenabled$hs_private$cms__initmark__end$v1(void);
extern void __dtrace_probe$hs_private$cms__remark__begin$v1(void);
extern int __dtrace_isenabled$hs_private$cms__remark__begin$v1(void);
extern void __dtrace_probe$hs_private$cms__remark__end$v1(void);
extern int __dtrace_isenabled$hs_private$cms__remark__end$v1(void);
extern void __dtrace_probe$hs_private$hashtable__new_entry$v1$766f6964202a$75696e7433325f74$75696e747074725f74$766f6964202a(const void *, uint32_t, uintptr_t, const void *);
extern int __dtrace_isenabled$hs_private$hashtable__new_entry$v1(void);
extern void __dtrace_probe$hs_private$safepoint__begin$v1(void);
extern int __dtrace_isenabled$hs_private$safepoint__begin$v1(void);
extern void __dtrace_probe$hs_private$safepoint__end$v1(void);
extern int __dtrace_isenabled$hs_private$safepoint__end$v1(void);

#else

#define	HS_PRIVATE_CMS_INITMARK_BEGIN() \
do { \
	} while (0)
#define	HS_PRIVATE_CMS_INITMARK_BEGIN_ENABLED() (0)
#define	HS_PRIVATE_CMS_INITMARK_END() \
do { \
	} while (0)
#define	HS_PRIVATE_CMS_INITMARK_END_ENABLED() (0)
#define	HS_PRIVATE_CMS_REMARK_BEGIN() \
do { \
	} while (0)
#define	HS_PRIVATE_CMS_REMARK_BEGIN_ENABLED() (0)
#define	HS_PRIVATE_CMS_REMARK_END() \
do { \
	} while (0)
#define	HS_PRIVATE_CMS_REMARK_END_ENABLED() (0)
#define	HS_PRIVATE_HASHTABLE_NEW_ENTRY(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	HS_PRIVATE_HASHTABLE_NEW_ENTRY_ENABLED() (0)
#define	HS_PRIVATE_SAFEPOINT_BEGIN() \
do { \
	} while (0)
#define	HS_PRIVATE_SAFEPOINT_BEGIN_ENABLED() (0)
#define	HS_PRIVATE_SAFEPOINT_END() \
do { \
	} while (0)
#define	HS_PRIVATE_SAFEPOINT_END_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _HS_PRIVATE_H */

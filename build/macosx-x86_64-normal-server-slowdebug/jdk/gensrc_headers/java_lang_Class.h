/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_lang_Class */

#ifndef _Included_java_lang_Class
#define _Included_java_lang_Class
#ifdef __cplusplus
extern "C" {
#endif
#undef java_lang_Class_ANNOTATION
#define java_lang_Class_ANNOTATION 8192L
#undef java_lang_Class_ENUM
#define java_lang_Class_ENUM 16384L
#undef java_lang_Class_SYNTHETIC
#define java_lang_Class_SYNTHETIC 4096L
#undef java_lang_Class_serialVersionUID
#define java_lang_Class_serialVersionUID 3206093459760846163LL
/*
 * Class:     java_lang_Class
 * Method:    registerNatives
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_registerNatives
  (JNIEnv *, jclass);

/*
 * Class:     java_lang_Class
 * Method:    forName0
 * Signature: (Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_forName0
  (JNIEnv *, jclass, jstring, jboolean, jobject, jclass);

/*
 * Class:     java_lang_Class
 * Method:    isInstance
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_isInstance
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_lang_Class
 * Method:    isAssignableFrom
 * Signature: (Ljava/lang/Class;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_isAssignableFrom
  (JNIEnv *, jobject, jclass);

/*
 * Class:     java_lang_Class
 * Method:    isInterface
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_isInterface
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    isArray
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_isArray
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    isPrimitive
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_isPrimitive
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getName0
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_Class_getName0
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getSuperclass
 * Signature: ()Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_getSuperclass
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getInterfaces0
 * Signature: ()[Ljava/lang/Class;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getInterfaces0
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getComponentType
 * Signature: ()Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_getComponentType
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getModifiers
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_java_lang_Class_getModifiers
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getSigners
 * Signature: ()[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getSigners
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    setSigners
 * Signature: ([Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_setSigners
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     java_lang_Class
 * Method:    getEnclosingMethod0
 * Signature: ()[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getEnclosingMethod0
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getDeclaringClass0
 * Signature: ()Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_getDeclaringClass0
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getProtectionDomain0
 * Signature: ()Ljava/security/ProtectionDomain;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Class_getProtectionDomain0
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getPrimitiveClass
 * Signature: (Ljava/lang/String;)Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_getPrimitiveClass
  (JNIEnv *, jclass, jstring);

/*
 * Class:     java_lang_Class
 * Method:    getGenericSignature0
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_Class_getGenericSignature0
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getRawAnnotations
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_java_lang_Class_getRawAnnotations
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getRawTypeAnnotations
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_java_lang_Class_getRawTypeAnnotations
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getConstantPool
 * Signature: ()Lsun/reflect/ConstantPool;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Class_getConstantPool
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    getDeclaredFields0
 * Signature: (Z)[Ljava/lang/reflect/Field;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getDeclaredFields0
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     java_lang_Class
 * Method:    getDeclaredMethods0
 * Signature: (Z)[Ljava/lang/reflect/Method;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getDeclaredMethods0
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     java_lang_Class
 * Method:    getDeclaredConstructors0
 * Signature: (Z)[Ljava/lang/reflect/Constructor;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getDeclaredConstructors0
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     java_lang_Class
 * Method:    getDeclaredClasses0
 * Signature: ()[Ljava/lang/Class;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getDeclaredClasses0
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Class
 * Method:    desiredAssertionStatus0
 * Signature: (Ljava/lang/Class;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_desiredAssertionStatus0
  (JNIEnv *, jclass, jclass);

#ifdef __cplusplus
}
#endif
#endif

pnameserv.success=Persistenter NameServer erfolgreich gestartet
servertool.unregister=\n\tunregister [ -serverid <Server-ID> | -applicationName <Name> ] \n
servertool.serverup=\tServer ist bereits hochgefahren.
orbd.commfailure=\nStart von ORBD nicht erfolgreich, da ORBinitialPort bereits verwendet wird
servertool.name=\tName      - {0}
servertool.serverid=\tServer-ID - {0}
tnameserv.usage=Verwenden Sie einen anderen Port mit den Befehlszeilenargumenten -ORBInitialPort <Portnummer>
servertool.listappnames2=Derzeit definierte Server-applicationNames\:
servertool.locate=\n\tlocate [ -serverid <Server-ID> | -applicationName <Name> ] [ <-endpointType <endpointType> ] \n
orbd.internalexception=\nStart von ORBD aufgrund einer internen Ausnahme nicht erfolgreich. \nMögliche Ursachen\: \n1. Der angegebene ORBInitialPort oder ORBActivationPort wird bereits verwendet \n2. Keine Berechtigung zum Schreiben von orb.db 
servertool.listappnames1=derzeit definierte applicationNames auflisten
servertool.vmargs=\tvmargs    - {0}
servertool.quit=\n\tquit\n
tnameserv.hs3=Bereit.
tnameserv.hs2=TransientNameServer\: Port für anfängliche Objektreferenzen wird auf {0} gesetzt
tnameserv.hs1=Anfänglicher Namenskontext\:\n{0}
servertool.listappnames=\tlistappnames\n
servertool.shorthelp=\n\n\tVerfügbare Befehle\: \n\t------------------- \n
servertool.list=\n\tlist\n
servertool.list2=\n\tServer-ID\tServerklassenname\t\tServeranwendung\n\t---------\t-----------------\t\t------------------\n
servertool.list1=alle registrierten Server auflisten
servertool.locate2=\n\n\tHostname {0} \n\n\t\tPort\t\tPorttyp\t\tORB-ID\n\t\t----\t\t-------\t\t------\n
servertool.locate1=Ports eines speziellen Typs für einen registrierten Server finden
tnameserv.invalidhostoption=ORBInitialHost ist keine gültige Option für NameService
servertool.helddown=\tServer ist außer Betrieb.
servertool.help=\thelp\n\tOR\n\thelp <Befehlsname>\n
bootstrap.filenotreadable=Datei {0} kann nicht gelesen werden
servertool.nosuchserver=\tServer wurde nicht gefunden.
servertool.shutdown2=\tServer erfolgreich heruntergefahren.
servertool.shutdown1=registrierten Server herunterfahren
servertool.locateorb2=\n\n\tHostname {0} \n\n\t\tPort\t\tPortType\t\tORB-ID\n\t\t----\t\t-------\t\t------\n
servertool.locateorb1=Ports für einen speziellen ORB bei einem registrierten Server finden
servertool.getserverid=\n\tgetserverid [ -applicationName <Name> ] \n
tnameserv.exception=Beim Hochfahren des Bootstrap-Services auf Port {0} wurde eine Ausnahme abgefangen
servertool.shutdown=\n\tshutdown [ -serverid <Server-ID> | -applicationName <Name> ]\n
orbd.usage=Verwendung\: {0} <Optionen> \n\nwobei folgende <Optionen> möglich sind\:\n  -port                  Aktivierungsport, an dem der ORBD gestartet werden sollte, Standardwert 1049 (optional)\n  -defaultdb             Verzeichnis für ORBD-Dateien, Standardwert "./orb.db" (optional)\n  -serverid              Server-ID für ORBD, Standardwert 1 (optional)\n  -ORBInitialPort        Anfangsport (erforderlich)\n  -ORBInitialHost        Anfänglicher HostName (erforderlich)\n
bootstrap.success=Port wird auf {0} gesetzt, Services werden aus {1} gelesen
servertool.banner=\n\nWillkommen beim Java IDL-Servertool \nGeben Sie die entsprechenden Befehle im Prompt ein \n
servertool.register=\n\n\tregister -server <Serverklassenname> \n\t         -applicationName <alternativer Servername> \n\t         -classpath <Classpath für Server> \n\t         -args <Argumente für Server> \n\t         -vmargs <Argumente für Server Java VM>\n
servertool.appname=\tapplicationName     - {0}
servertool.args=\targs      - {0}
servertool.usage=Verwendung\: {0} <Optionen> \n\nwobei folgende <Optionen> möglich sind\:\n  -ORBInitialPort        Anfangsport (erforderlich)\n  -ORBInitialHost        Anfänglicher HostName (erforderlich)\n
servertool.classpath=\tclasspath - {0}
servertool.servernotrunning=\tServer wird nicht ausgeführt.
tnameserv.orbinitialport0=ORBInitialPort 0 ist keine gültige Option für NameService
servertool.baddef=Ungültige Serverdefinition\: {0}
servertool.register4=\tServer bereits registriert (serverid \= {0}).
servertool.locateorb=\n\tlocateperorb [ -serverid <Server-ID> | -applicationName <Name> ] [ -orbid <ORB-Name> ]\n
servertool.register3=\tServer registriert, aber außer Betrieb (serverid \= {0}).
servertool.orbidmap=\\Verwendung\: orblist [ -serverid <Server-ID> | -applicationName <Name> ]\n
servertool.register2=\tServer registriert (serverid \= {0}).
servertool.register1=aktivierbaren Server registrieren
bootstrap.filenotfound=Datei {0} wurde nicht gefunden
servertool.help1=Hilfe abrufen
servertool.orbidmap2=\n\tORB-ID\t\tORB-Name\n\t------\t\t--------\n
servertool.orbidmap1=Liste von ORB-Namen und ihren Zuordnungen
servertool.getserverid2=\tServer-ID für applicationName {0} ist {1}
servertool.startserver=\n\tstartup [ -serverid <Server-ID> | -applicationName <Name> ]\n
servertool.getserverid1=Server-ID für applicationName zurückgeben
servertool.nosuchorb=\tUngültiger ORB.
servertool.startserver2=\tServer erfolgreich hochgefahren.
servertool.startserver1=registrierten Server starten
bootstrap.exception=Beim Speichern von Eigenschaften in Datei {0} wurde eine Ausnahme abgefangen\: Ausnahme {1}
servertool.unregister2=\tServerregistrierung aufgehoben.
servertool.unregister1=Registrierung eines registrierten Servers aufheben
servertool.listactive1=derzeit aktive Server auflisten
bootstrap.usage=Verwendung\: {0} <Optionen> \n\nwobei folgende <Optionen> möglich sind\:\n  -ORBInitialPort        Anfänglicher Port (erforderlich)\n  -InitialServicesFile   Datei mit Liste von anfänglichen Services (erforderlich)\n
servertool.quit1=dieses Tool beenden
servertool.listactive=\n\tlistactive
